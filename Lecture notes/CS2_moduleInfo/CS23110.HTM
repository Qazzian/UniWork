<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0080)http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS23110.module.html -->
<HTML><HEAD><TITLE>Computer Science Module CS23110</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content="MSHTML 5.00.2314.1000" name=GENERATOR></HEAD>
<BODY>
<H4>Computer Science, Prifysgol Cymru Aberystwyth University of Wales</H4>
<HR>

<H1>CS23110 (1999-00 session)<BR>Small Real-Time Systems</H1>
<HR>

<H2>Brief Description</H2>A real-time computer system operates on a timescale 
that is governed by the application for which it is designed; in other words the 
computer must not only perform the function for which it is designed but it must 
do so on a specified timescale. One manufacturer of real-time products uses the 
appropriate catchphrase "the right answer late is wrong". Examples of real-time 
systems include washing machine controllers, engine management systems, 
industrial controllers, avionic systems and many more. All of these are also 
examples of embedded systems, computer systems that are designed exclusively for 
a specific application and may not be immediately recognisable as a computer. In 
all of these cases the computer interacts with the equipment that it monitors 
and controls via sensors and actuators, in contrast with the I/O facilities 
typically associated with conventional computers. The course introduces the 
ideas of real-time embedded systems, the special requirements that they place on 
the design process and some of the methods used for their design and 
implementation. 
<P><A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS23110.module.html#aimsanchor">Aims</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS23110.module.html#objectivesanchor">Objectives</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS23110.module.html#syllabusanchor">Syllabus</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS23110.module.html#booklistanchor">Booklist</A>
<P>
<HR>

<H2>Further Details</H2>
<DL>
  <DT>Number of lectures
  <DD>20 
  <DT>Number of seminars/tutorials (up to)
  <DD>0 
  <DT>Number of practicals (up to)
  <DD>0 
  <DT>Coordinator
  <DD>Dr. Mark Ratcliffe 
  <DT>Other staff involved
  <DD>Not yet known 
  <DT>Pre-requisites
  <DD><A 
  href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS22210.module.html">CS22210</A> 

  <DT>Co-requisites
  <DD><A 
  href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS21120.module.html">CS21120</A> 

  <DT>Incompatibilities
  <DD>None 
  <DT>Assessment
  <DD>Assessed coursework - 20% <BR>Written exam - 80% 
  <DT>Timing
  <DD>This module is offered only in Semester 2</DD></DL><A name=aimsanchor>
<H2>Aims</H2></A>To introduce students to the ideas of embedded systems (through 
studying a wide range of application areas), and to the techniques used for 
developing them (including such systems for safety-related applications). <A 
name=objectivesanchor>
<H2>Objectives</H2></A>A student who successfully completes the course should be 
able to: 
<UL>
  <LI>identify the wide, and increasing, use of small embedded systems in 
  domestic, office, transport and industrial process control applications; 
  <LI>specify the desired behaviour of an embedded system, including its 
  real-time operation and quality requirements; 
  <LI>select appropriate interfaces, both analogue and digital, that are used 
  for input and output in embedded systems; 
  <LI>select a hardware and software design taking account of their joint 
  influence on system performance and dependability; 
  <LI>define required characteristics of multi-tasking software, for use with 
  real-time executive or kernel; 
  <LI>recognise the strengths and limitations of methods such as MASCOT or HOOD 
  for the design of real-time systems; 
  <LI>design a small real-time system in MASCOT; 
  <LI>discuss the implications and risks of using an embedded system in a 
  safety-related application. </LI></UL><A name=syllabusanchor>
<H2>Syllabus</H2></A>
<DL>
  <DT>Introduction - <EM>2 Lectures</EM>
  <DD>Scope and definitions. Examples. 
  <DT>Responding to the real world - <EM>4 Lectures</EM>
  <DD>Hardware and software interaction. Input/output devices and interfaces. 
  Interrupts and polling; control strategies. Hardware-software tradeoffs; 
  architectures for real-time. 
  <DT>Software structure - <EM>1 Lecture</EM>
  <DD>Application tasks and real-time kernels. Scheduling; resource allocation. 
  <DT>Design principles and practice - <EM>6 Lectures</EM>
  <DD>What a design method can and cannot give. MASCOT (Modular Approach to 
  System Construction, Operation and Testing). Example and use of MASCOT. HOOD 
  (Hierarchical Object Oriented Design). Impact of performance issues on design. 

  <DT>Implementation principles and practice - <EM>4 Lectures</EM>
  <DD>Tools to assist development. Host-target development, simulation, 
  emulation. Debugging aids, performance monitors. 
  <DT>Checking principles and practice - <EM>2 Lectures</EM>
  <DD>Validation and Quality Assurance. Safety related systems and related 
  standards. 
  <DT>Revision and conclusion - <EM>1 Lecture</EM>
  <DD></DD></DL><A name=booklistanchor>
<H2>Booklist</H2></A>
<H3>Students are likely to need ready access to the following</H3>
<DL>
  <DT><A name=cooling91></A>
  <DD>J. E. Cooling. <EM>Software Design for Real-time Systems</EM>. Chapman and 
  Hall, 1991. 
  <P></P></DD></DL>
<H3>The following should be consulted for different approaches or for further 
information</H3>
<DL>
  <DT><A name=Budgen96></A>
  <DD>David Budgen. <EM>Software Design</EM>. Addison Wesley, 1996. ISBN 
  0-201-54403-2. 
  <P></P>
  <DT><A name=burnswellings90></A>
  <DD>Alan Burns and Andy Wellings. <EM>Real-Time Systems and their Programming 
  Languages</EM>. Addison Wesley, 1st edition, 1990. ISBN 0-201-17529-0. 
  <P></P>
  <DT><A name=burnswellings96></A>
  <DD>Alan Burns and Andy Wellings. <EM>Real-Time Systems and their Programming 
  Languages</EM>. Addison Wesley, 2nd edition, 1996. ISBN 0-201-40365-X. 
  <P></P>
  <DT><A name=mascot87></A>
  <DD>The official handbook of MASCOT : Version 3.1. Royal Signals and Radar 
  Establishment, 1987. 
  <P></P></DD></DL>
<H6>Version 5.11</H6>
<HR>

<CENTER>
<TABLE>
  <TBODY>
  <TR>
    <TD><A 
      href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/">Syllabus</A></TD>
    <TD><A href="http://www.aber.ac.uk/~dcswww/">Home 
Page</A></TD></TR></TBODY></TABLE></CENTER>
<CENTER>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TD align=left>
      <ADDRESS><A 
      href="http://www.aber.ac.uk/~dcswww/Admin/staff/HTML/nwh.html">Nigel 
      Hardy</A> Departmental Advisor</ADDRESS></TD>
    <TD align=right>
      <ADDRESS><A 
  href="mailto:nwh@aber.ac.uk">nwh@aber.ac.uk</A></ADDRESS></TD></TR></TBODY></TABLE></CENTER></BODY></HTML>
