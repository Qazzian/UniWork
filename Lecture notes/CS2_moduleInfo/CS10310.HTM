<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0080)http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS10310.module.html -->
<HTML><HEAD><TITLE>Computer Science Module CS10310</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content="MSHTML 5.00.2314.1000" name=GENERATOR></HEAD>
<BODY>
<H4>Computer Science, Prifysgol Cymru Aberystwyth University of Wales</H4>
<HR>

<H1>CS10310 (1999-00 session)<BR>An Introduction to Theoretical Computer 
Science</H1>
<HR>

<H2>Brief Description</H2>This module introduces basic concepts and results of 
theoretical Computer Science. It is intended for students with a background in 
computing who wish to deepen their understanding of programming concepts and the 
theoretical underpinning of Computer Science. 
<P><A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS10310.module.html#aimsanchor">Aims</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS10310.module.html#objectivesanchor">Objectives</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS10310.module.html#syllabusanchor">Syllabus</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS10310.module.html#booklistanchor">Booklist</A>
<P>
<HR>

<H2>Further Details</H2>
<DL>
  <DT>Number of lectures
  <DD>16 
  <DT>Number of seminars/tutorials (up to)
  <DD>6 
  <DT>Number of practicals (up to)
  <DD>0 
  <DT>Coordinator
  <DD>Dr. Mark Ratcliffe 
  <DT>Other staff involved
  <DD>Not yet known 
  <DT>Pre-requisites
  <DD>None 
  <DT>Co-requisites
  <DD>None 
  <DT>Incompatibilities
  <DD>None 
  <DT>Assessment
  <DD>Two hour written examination - 100% <BR>Resit assessment: two hour written 
  examination - 100% 
  <DT>Timing
  <DD>This module is offered only in Semester 1</DD></DL><A name=aimsanchor>
<H2>Aims</H2></A>The aims of this module are: 
<UL>
  <LI>to provide an overview of the basic definitions and results of theoretical 
  computing; 
  <LI>to provide a theoretical foundation for specifying and proving program 
  behaviour; 
  <LI>to introduce software proof techniques. </LI></UL><A name=objectivesanchor>
<H2>Objectives</H2></A>On successful completion of this module students should 
be able to: 
<UL>
  <LI>state basic definitions and results of the theory of computing; 
  <LI>provide formal definitions of programming language constructs. </LI></UL><A 
name=syllabusanchor>
<H2>Syllabus</H2></A>
<DL>
  <DT>Sets, functions and relations - <EM>4 Lectures</EM>
  <DD>Motivation - relationship with programs. What are sets and how do we 
  describe them. When to use enumeration and when to use predicates. The set of 
  truth values. Cardinality. Subsets. Using sets to specify pre- and 
  post-conditions for programs. Sets and sequences. Representing sets as 
  sequences. A proof involving sets and sequences. Proof by contradiction. 
  Cartesian product. Powerset. Proof that a finite set A with n elements has 2n 
  subsets. Set union, intersection, difference. Universal set. Complement of a 
  set. Venn-Euler diagrams. 
  <DT>Functions (maps) - <EM>4 Lectures</EM>
  <DD>What are functions and how do we represent them - pictorially, using 
  definitions, injection, bijection, surjection. Functions and the meaning of 
  assignment. Variables. States and operations that cause a change of state. 
  Functions. Relations and logical conditions. 
  <DT>Languages and Problems - <EM>4 Lectures</EM>
  <DD>Motivation: computation entails using language to describe and solve 
  problems. Symbols, alphabets. Strings. String concatenation. Alphabets and 
  strings. Languages. Language union, intersection, difference and symmetric 
  difference. Language concatenation. Kleene star. Regular expressions and 
  regular languages. Deterministic finite automata. Nondeterministic Finite 
  Automata. Languages that are not regular. The Pumping Lemma (simple and 
  general forms). Proving that a language is/is not regular. Closure properties 
  of regular language. Using the closure properties to prove that a language is 
  not regular. Context free languages. Context free grammars. Derivations of 
  context free grammars. Context free grammars and regular grammars. Pushdown 
  automata. Languages that are not context free. Context free languages are not 
  closed under intersection. Context free languages are not closed under 
  complementation. Context free languages are closed under union. 
  <DT>Induction - <EM>2 Lectures</EM>
  <DD>What is induction? Proof by induction over N. Structural induction. The 
  Principle of Complete Induction. Proofs involving context free grammars 
  <DT>Turing Machines - <EM>2 Lectures</EM>
  <DD>What are Turing machines. Beyond context free languages. Example. 
</DD></DL><A name=booklistanchor>
<H2>Booklist</H2></A>
<H3>It is considered essential to purchase the following</H3>
<DL>
  <DT><A name=GreenlawHoover98></A>
  <DD>Raymond Greenlaw and H. James Hoover. <EM>Fundamentals of the Theory of 
  Computation: Principles and Practice</EM>. Morgan Kaufmann Publishers Inc., 
  1998. 
  <P></P>
  <DT><A name=Sipser97></A>
  <DD>Michael Sipser. <EM>Introduction to the Theory of Computation</EM>. 
  International Thomson Publishing, 1997. 
  <P></P></DD></DL>
<DL>
  <DT>Notes
  <DD>Students should buy one of the above; exactly which is left to your own 
  personal preference</DD></DL>
<H6>Version 1.10</H6>
<HR>

<CENTER>
<TABLE>
  <TBODY>
  <TR>
    <TD><A 
      href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/">Syllabus</A></TD>
    <TD><A href="http://www.aber.ac.uk/~dcswww/">Home 
Page</A></TD></TR></TBODY></TABLE></CENTER>
<CENTER>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TD align=left>
      <ADDRESS><A 
      href="http://www.aber.ac.uk/~dcswww/Admin/staff/HTML/nwh.html">Nigel 
      Hardy</A> Departmental Advisor</ADDRESS></TD>
    <TD align=right>
      <ADDRESS><A 
  href="mailto:nwh@aber.ac.uk">nwh@aber.ac.uk</A></ADDRESS></TD></TR></TBODY></TABLE></CENTER></BODY></HTML>
