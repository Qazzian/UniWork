<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0080)http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS24210.module.html -->
<HTML><HEAD><TITLE>Computer Science Module CS24210</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content="MSHTML 5.00.2314.1000" name=GENERATOR></HEAD>
<BODY>
<H4>Computer Science, Prifysgol Cymru Aberystwyth University of Wales</H4>
<HR>

<H1>CS24210 (1999-00 session)<BR>Syntax Analysis and Topics in Programming</H1>
<HR>

<H2>Brief Description</H2>This module aims to familiarise students with the 
concepts required for specifying and implementing programming languages, and to 
study their practical applications in a variety of contexts. 
<P><A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS24210.module.html#aimsanchor">Aims</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS24210.module.html#objectivesanchor">Objectives</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS24210.module.html#syllabusanchor">Syllabus</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS24210.module.html#booklistanchor">Booklist</A>
<P>
<HR>

<H2>Further Details</H2>
<DL>
  <DT>Number of lectures
  <DD>22 
  <DT>Number of seminars/tutorials (up to)
  <DD>4 
  <DT>Number of practicals (up to)
  <DD>4 x 2hrs 
  <DT>Coordinator
  <DD>Dr. Mark Ratcliffe 
  <DT>Other staff involved
  <DD>Not yet known 
  <DT>Pre-requisites
  <DD>None 
  <DT>Co-requisites
  <DD><A 
  href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS21120.module.html">CS21120</A> 

  <DT>Incompatibilities
  <DD>CS34210 
  <DT>Assessment
  <DD>Two hour written examination - 100% <BR>Resit assessment will follow a 
  similar pattern 
  <DT>Timing
  <DD>This module is offered only in Semester 1</DD></DL><A name=aimsanchor>
<H2>Aims</H2></A>This module aims to familiarise students with the concepts 
required for specifying and implementing programming languages. <A 
name=objectivesanchor>
<H2>Objectives</H2></A>On successful completion of this course students should 
be able to: 
<UL>
  <LI>make effective use of compilers and other language processing software; 
  <LI>apply the techniques and algorithms used in compilation to other areas of 
  software engineering; 
  <LI>understand the need for implementation independent semantics of 
  programming languages; </LI></UL><A name=syllabusanchor>
<H2>Syllabus</H2></A>
<DL>
  <DT>Overview of Language Processing Software - <EM>1 Lecture</EM>
  <DD>Editors, compilers, static analysers, interpreters, text formatting, 
  scripting languages. 
  <DT>Assemblers, Linkers and Loaders - <EM>3 Lectures</EM>
  <DD>Assembly languages and machine languages; Single pass and two pass 
  assembly; Linking; Simple absolute loader; Linking loader 
  <DT>The structure of a typical compiler - <EM>1 Lecture</EM>
  <DD>Lexical, syntactic and semantic analysis; Optimisation and code 
  generation; Implementation; Symbol tables 
  <DT>Lexical Analysis - <EM>3 Lectures</EM>, <EM>2 Practicals</EM>
  <DD>Lexemes and tokens; Regular Expressions; Finite Automata; Practical use of 
  a scanner generator 
  <DT>Syntactic Analysis - <EM>3 Lectures</EM>, <EM>2 Practicals</EM>
  <DD>Context free grammars; Parse trees and abstract syntax trees; Parsing 
  strategies (recursive descent, LL, LR); Practical use of a parser generator 
  <DT>Intermediate Languages - <EM>2 Lectures</EM>
  <DD>Abstract syntax trees; Reverse polish notation; 3-address code; Attribute 
  grammars and structural attributes 
  <DT>Semantic Analysis - <EM>2 Lectures</EM>
  <DD>Different kinds of semantic analysis; Attribute grammars and semantic 
  attributes 
  <DT>Code generation - <EM>3 Lectures</EM>
  <DD>Aims of code generation; Memory management, instruction selection and 
  register allocation; Flow graphs; A simple code generator 
  <DT>Optimisation and Optimising Compilers - <EM>2 Lectures</EM>
  <DD>Optimisation of source, intermediate and target code; Safety and 
  profitability of optimisation; Flow graphs and optimisation of intermediate 
  code 
  <DT>Applications of Compilation Techniques - <EM>2 Lectures</EM>
  <DD>Markup languages; scripting languages; VLSI </DD></DL><A 
name=booklistanchor>
<H2>Booklist</H2></A>
<H3>It is considered essential to purchase the following</H3>
<DL>
  <DT><A name=bennett96></A>
  <DD>J. Bennett. <EM>Introduction to Compiling Techniques: a first course using 
  ANSI C, lex and Yacc</EM>. McGraw-Hill, 1996. 
  <P></P></DD></DL>
<H3>Students are likely to need ready access to the following</H3>
<DL>
  <DT><A name=ahosethiullman86></A>
  <DD>A.V. Aho, R. Sethi, and J.D. Ullman. <EM>Compilers: Principles, Techniques 
  and Tools</EM>. Addison-Wesley, 1986. 
  <P></P></DD></DL>
<H6>Version 1.2</H6>
<HR>

<CENTER>
<TABLE>
  <TBODY>
  <TR>
    <TD><A 
      href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/">Syllabus</A></TD>
    <TD><A href="http://www.aber.ac.uk/~dcswww/">Home 
Page</A></TD></TR></TBODY></TABLE></CENTER>
<CENTER>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TD align=left>
      <ADDRESS><A 
      href="http://www.aber.ac.uk/~dcswww/Admin/staff/HTML/nwh.html">Nigel 
      Hardy</A> Departmental Advisor</ADDRESS></TD>
    <TD align=right>
      <ADDRESS><A 
  href="mailto:nwh@aber.ac.uk">nwh@aber.ac.uk</A></ADDRESS></TD></TR></TBODY></TABLE></CENTER></BODY></HTML>
