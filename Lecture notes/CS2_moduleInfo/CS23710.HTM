<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0080)http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS23710.module.html -->
<HTML><HEAD><TITLE>Computer Science Module CS23710</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content="MSHTML 5.00.2314.1000" name=GENERATOR></HEAD>
<BODY>
<H4>Computer Science, Prifysgol Cymru Aberystwyth University of Wales</H4>
<HR>

<H1>CS23710 (1999-00 session)<BR>C and UNIX Systems Programming</H1>
<HR>

<H2>Brief Description</H2>The main objectives of this course are to teach the 
basic features of the C programming language, the structure of the UNIX 
operating system and the UNIX interface to the programmer. 
<P>The facilities of C will be introduced by comparison with those of Java, the 
emphasis being on the rationale behind the language design decisions for the two 
programming languages. Emphasis will also be placed on C programming 
incorporating good modular design, readability, portability, and use of 
appropriate tools. 
<P>The second part of the course will address the structure of the UNIX 
operating system and the interface presented by functions and system calls for 
use from C. 
<P>The module will also consider the relevance of standards, both in C and in 
UNIX. 
<P><A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS23710.module.html#aimsanchor">Aims</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS23710.module.html#objectivesanchor">Objectives</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS23710.module.html#syllabusanchor">Syllabus</A>, 
<A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS23710.module.html#booklistanchor">Booklist</A>
<P>
<HR>

<H2>Further Details</H2>
<DL>
  <DT>Number of lectures
  <DD>19 
  <DT>Number of seminars/tutorials (up to)
  <DD>0 
  <DT>Number of practicals (up to)
  <DD>15 x 2hr 
  <DT>Coordinator
  <DD>Dr. Mark Ratcliffe 
  <DT>Other staff involved
  <DD>Not yet known 
  <DT>Pre-requisites
  <DD><A 
  href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS22210.module.html">CS22210</A> 

  <DT>Co-requisites
  <DD><A 
  href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS21120.module.html">CS21120</A> 

  <DT>Incompatibilities
  <DD>None 
  <DT>Assessment
  <DD>Four pieces of assessed coursework - 100% <BR>Resit assessment will follow 
  the similar pattern. 
  <DT>Timing
  <DD>This module is offered only in Semester 2</DD></DL><A name=aimsanchor>
<H2>Aims</H2></A>
<P>The aim of this course is to teach the student the fundamentals of the C 
language. In order to compare the facilities and underlying philosophy of C with 
that of Java, the first part of the course will draw closely on the material 
that is covered in <A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS21120.module.html">CS21120</A> 
. 
<P>The UNIX operating system is studied as an example of the operating systems 
material covered in <A 
href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/CS22210.module.html">CS22210</A> 
and also as an application of the C language. 
<UL>
  <LI>The first part of the course will cover the C language, paying special 
  attention to its differences in facilities and philosophy to those of Java. 
  <LI>The second part of the course looks at the UNIX operating system as an 
  example of an operating system programming interface and also at the binding 
  that the UNIX operating system presents to the C programmer. </LI></UL><A 
name=objectivesanchor>
<H2>Objectives</H2></A>The detailed objectives of this module are: 
<UL>
  <LI>To provide students with enough facility in C programming that they are 
  able to read, write and debug C programs. 
  <LI>To examine the philosophy behind the creation of the C language. 
  <LI>To examine the similarities and differences between C and Java. 
  <LI>To examine the structure of the UNIX operating system. 
  <LI>To examine the philosophy behind the creation of UNIX. 
  <LI>To examine the programming interface to UNIX from C. 
  <LI>To give the student practice in understanding operating system facilities. 

  <LI>To underline the importance of standards. </LI></UL><A name=syllabusanchor>
<H2>Syllabus</H2></A>
<DL>
  <DT>Basic Concepts - <EM>1 Lecture</EM>
  <DD>History of the C language, philosophical differences between C language 
  design and Java. Basic form of a C program compared with that of a Java 
  program. Using the compiler. 
  <DT>Control Structures - <EM>2 Lectures</EM>
  <DD>Sequence, branching and iteration in C compared with that of Java. 
  <DT>Basic Data Structures - <EM>1 Lecture</EM>
  <DD>Review of basic data types and operators in C. 
  <DT>Subprograms - <EM>1 Lecture</EM>
  <DD>Discussion of ways in which functions are implemented, and used in C, 
  including parameter passing mechanisms. 
  <DT>Composite Data Structures - <EM>1 Lecture</EM>
  <DD>A first discussion of Arrays in C. Input/Output. 
  <DT>Software Support Tools - <EM>1 Lecture</EM>
  <DD>Make, Lint, Debuggers. Libraries and library utilities. Static/Dynamic 
  analysers. 
  <DT>C Programming Style and Portability - <EM>1 Lecture</EM>
  <DD>Language standards. Portability. Programming standards. 
  <DT>Arrays, Pointers and Functions - <EM>2 Lectures</EM>
  <DD>A discussion of pointer data types, how they relate to arrays, and how 
  they contrast with Java objects. 
  <DT>Dynamic Data Structures - <EM>2 Lectures</EM>
  <DD>Implementation of various record structures and dynamic structures. 
  Pointers. Malloc. Examples in C. Parallels will be drawn with how the 
  internals of Java do this for you. 
  <DT>Pitfalls - <EM>1 Lecture</EM>
  <DD>Major problem areas. Design rationale of C and of Java in problem areas. 
  <DT>Further Features - <EM>1 Lecture</EM>
  <DD>C preprocessor, header files, conditional inclusion, macro substitution, 
  bitwise operators, casts, enumeration, scope, static and external 
  declarations, separate compilation. 
  <DT>The Structure of UNIX - <EM>1 Lecture</EM>
  <DD>An overview of the structure of the UNIX operating system and a 
  description of the major components, including: the kernel, device drivers, 
  the filesystem, the process, interprocess communication, the terminal. An 
  introduction to the programming interface to UNIX. 
  <DT>The Filesystem and Files - <EM>1 Lecture</EM>
  <DD>The structure of the filesystem and associated operations. The types of 
  file and the operations on files. 
  <DT>The Terminal - <EM>1 Lecture</EM>
  <DD>A study of the general interface. 
  <DT>Standards - <EM>1 Lecture</EM>
  <DD>ANSI 'C'; IEEE POSIX; UNIX International SVID; XOPEN XPG; COSE 
  <DT>Window systems and Event-Driven Programming - <EM>1 Lecture</EM>
  <DD>An appreciation of some of the problems involved in the programming of 
  applications which interact with the X window system. Includes studying 
  event-driven programming techniques. </DD></DL><A name=booklistanchor>
<H2>Booklist</H2></A>
<H3>Students are likely to need ready access to the following</H3>
<DL>
  <DT><A name=ameraal91></A>
  <DD>L. Ammeraal. <EM>C for Programmers</EM>. Wiley, 1991. 
  <P></P>
  <DT><A name=kelleypohl95></A>
  <DD>A. Kelley and I. Pohl. <EM>A Book on C: programming in C</EM>. Benjamin 
  Cummings, 3rd edition, 1995. 
  <P></P>
  <DT><A name=brown94></A>
  <DD>C. Brown. <EM>UNIX Distributed Programming</EM>. Addison Wesley, 1994. 
  <P></P>
  <DT><A name=robbins96></A>
  <DD>Kay A. Robbins and Steven Robbins. <EM>Practical Unix Programming (A guide 
  to concurrency, Communications and Multithreading)</EM>. Prentice Hall PTR, 
  1996. 
  <P></P></DD></DL>
<DL>
  <DT>Notes
  <DD>Access to either Ammeraal or Kelley and Pohl will normally be sufficient. 
  Only one of K. Robbins et al or C. Brown is required.</DD></DL>
<H3>The following should be consulted for different approaches or for further 
information</H3>
<DL>
  <DT><A name=kerniganritchie88></A>
  <DD>B.W. Kernighan and D. Ritchie. <EM>The C Programming Language - 2nd 
  Edition</EM>. Prentice Hall, 1988. 
  <P></P>
  <DT><A name=coxgoodheart94></A>
  <DD>J. Cox and B. Goodheart. <EM>The Magic garden</EM>. Prentice Hall, 1994. 
  <P></P>
  <DT><A name=koenig88></A>
  <DD>Andrew Koenig. <EM>C - Traps and Pitfalls</EM>. Addison Wesley, 1988. 
  <P></P>
  <DT><A name=indianhill></A>
  <DD>L.W. Cannon et.al. Indian Hill C Style and Coding Standards. Technical 
  report, University of Toronto, 1990. This highly recommended document is 
  available in the home directory of user cmk as misc/c/docs/ihstyle.ps. 
  <P></P>
  <DT><A name=hatton94></A>
  <DD>L. Hatton. <EM>Safer C, Developing Software for High-integrity and 
  Safety-critical Systems</EM>. McGraw-Hill, 1994. 
  <P></P>
  <DT><A name=vanderlinden94></A>
  <DD>P. Van der Linden. <EM>Expert C Programming, Deep C Secrets</EM>. Prentice 
  Hall, 1994. 
  <P></P></DD></DL>
<H6>Version 5.8</H6>
<HR>

<CENTER>
<TABLE>
  <TBODY>
  <TR>
    <TD><A 
      href="http://www.aber.ac.uk/~dcswww/Dept/Teaching/Syllabus/1999-00/">Syllabus</A></TD>
    <TD><A href="http://www.aber.ac.uk/~dcswww/">Home 
Page</A></TD></TR></TBODY></TABLE></CENTER>
<CENTER>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TD align=left>
      <ADDRESS><A 
      href="http://www.aber.ac.uk/~dcswww/Admin/staff/HTML/nwh.html">Nigel 
      Hardy</A> Departmental Advisor</ADDRESS></TD>
    <TD align=right>
      <ADDRESS><A 
  href="mailto:nwh@aber.ac.uk">nwh@aber.ac.uk</A></ADDRESS></TD></TR></TBODY></TABLE></CENTER></BODY></HTML>
