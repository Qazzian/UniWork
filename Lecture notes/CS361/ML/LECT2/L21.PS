%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: l2.dvi
%%Pages: 23
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -o l2.ps l2
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1996.08.30:0803
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale false def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (l2.dvi)
@start /Fa 1 49 df<EA01E0EA03F0A4EA07E0A313C0120FA21380A3EA1F00A3121E12
3E123CA312381278A21270A212F05AA20C1E7EA010>48 D E /Fb
4 106 df<127812FCA212FEA2127A1202A41204A31208A212101220124007127B8511>
59 D<013FB512F016FC903901F8003F4AEB0F80EE07C0EE03E0EE01F0495AEE00F8A349
5A17FCA3495AA449C812F81601A3013EEC03F0A217E016074915C0A2EE0F80EE1F005B16
3E5E5E4848495AED07C0ED1F800003027EC7FCB612F815C02E297EA831>68
D<903B3FFFE07FFFC0A2903B01F80003F0004A5CA44948495AA44948495AA4494849C7FC
A449B512FEA291C7123EA2013E5CA4495CA449495AA44848495AA300031407B50081B5FC
A232297EA832>72 D<131C133EA2133C13381300A9EA0780EA08E01210EA20F0A21240A2
EA41E012811201EA03C0A2EA0780A3EA0F00A21304121EA2EA1C08123CEA1C101320EA0C
60EA07800F287EA715>105 D E /Fc 29 122 df<EA03C0EA07E0EA0FF0A2EA1FF8A213
F0120FEA07B0EA0030A21360A213C0A2EA0180A2EA0300A212065A5A5A5A5A5A0D1A7A88
1A>44 D<387FFFFCA3B512F86C13F0160579941F>I<131C137E13FFA25AA213FEEA00FC
13781300B3120E123FEA7F80A212FFA21300127E123C102577A41A>58
D<17E01601A24C7EA21607A2160F161FA2163FA21677A216E7150116C7ED038783ED0703
A2150E151E151C1538A21570A215E0140115C014031580DA07007FA2020E1301A25C143C
023FB5FC5CA29138E00001A2495A13035C49C7FC83130E16005B133C1338137813F81201
D807FCEC03FF267FFF80017F13F8B56C90B512FC4A6D13F8363D7BBC40>65
D<49B812805B7F903A0007F800010203EC003F4A48141F180FA2F007004A5AA44A5AA218
0EA24A5AEE01C0A295C7FC4A48485AA3160702FE91C8FC5E163F91B6FC495CA29138FC00
7E163E4948131CA449485BA31630494890C9FCA4495AA4495AA449CBFCA2497E007FEBFF
80B6FC7E393B7BBA38>70 D<49B5D8F807B512E0495D6D8190260007FCC7381FF0006E48
6E5A4A484A5AA44A484A5AA44A484AC7FCA44A4814FEA44AC7485AA402FE4A5AA291B7FC
A2495E02FCC71207A349484A5AA449484A5AA449484A5AA449484AC8FCA4494814FEA449
C7485AA2491403007FD9FE01B512F8B55B6C80433B7BBA40>72 D<49B612F04915FF6D16
C0903B0007F8003FE00203EC07F84A481303717E717EA24A488084A2604A5AA44A48495A
A2604D5A4AC7120760EF0FC04D5A02FE027FC7FCEE01FCEE0FF091B61280494AC8FC9139
FC001F80EE07C0707E494880160183A2494880A44948495AA449481307A44948130F9438
F00380A2190049C700075B1806490203130E007F01FE6E5AB502015B6C9238007FF0CAEA
1FC0393C7BBA3F>82 D<92383FC002913901FFF8074AEBFC0E91390FC03F1E91381F000F
023CEB03BE4AEB01FC5C49481300495A010715F85C010F1578A249C81270A317F017E06E
14601700A28014F014FE90380FFFC015F86D13FF6D14C06D806D6C7F021F7F02037FEC00
3FED07FE15011500167FA282A20006153E120EA4001E5DA2167816F8003E5D003F4A5A15
036D5C007F4A5AD87DC0011FC7FCD879F0133E39707E01F839F03FFFF0D8E00F13C026C0
01FEC8FC303D7ABB30>I<48B812F85AA2903AFC003F8007D807F0150101C049C7FC4916
7848C7FC000E1770001E14FE121CA25A4A5AA24817E0A24A5A5AA2C716004A5AA44A5AA4
4A5AA44A5AA44AC9FCA414FEA4495AA4495AA4495AA2EB1FF8003FB512FC48805D353B71
BA3E>I<B500F849B5FCA24A15FED803FEC8EA3FE049ED1F8018000001161E171C173C17
385FA25F16015F6D4A5A12004CC7FC5E160E5EA25E167816706D5CA26D495A15035E4BC8
FCA2150E151E151C5D1480013F5B15F05DEC81C0A2EC8380148792C9FC148E14CE14DC13
1F14F85CA25CA25CA25C91CAFC7F130E383C6EBA40>86 D<B5D8F003B539C007FFFC6E48
5D4A6C4A6C13F8D807FEC7D81FF0C713C0D803F803C0EC3F001A3CA21A3862A262163F4F
5A167F71495A04FF140704EF92C7FCDB01CF140EA2DB038F5C1507040F5C6D130E000160
151C610338140161037014036103E04AC8FC140103C0140E140303805CEC070060140E71
5A4A15F004075B4AECF1C0A24AECF38014F04A02F7C9FCEBFFC06C16FE5C5F91C7FC5F5B
5F495DA2495DA2495D5B4E3C6EBA56>I<147CEB03FF90380F838690381F01CF90383C00
FF5B01F87F485A4848137E120749133E120F001F5C5B123FA290C75A5AA300FE495AA448
495A1670A3913807C0E0140F127C141F91383FC1C0003C1377003E01E31380391E01C3C3
3A0F0781C7003903FE00FED800F8137C242777A52C>97 D<EC3F80903801FFF0903807E0
7890380F801C90381E000E137C49133E0001147E484813FE5B000714FC4848137C153048
481300123FA290C8FC5AA312FEA55AA31504007C140E151C007E143C003E1478001E14E0
001FEB03C06CEB0F803907C07E003801FFF838007F801F2777A528>99
D<167CED1FFEED3FFC151F1500A216F8A4ED01F0A4ED03E0A4ED07C0A491387C0F80EB03
FF90380F838F90381F01CF90393C00FF005B01F87F485A4848137E120749133E120F001F
5C5B123FA290C75A5AA300FE495AA448495A1670A3913807C0E0140F127C141F91383FC1
C0003C1377003E01E31380391E01C3C33A0F0781C7003903FE00FED800F8137C273D77BB
2C>I<EC3F80903801FFE0903807E07090381F803890383E001C5B5B485A1203485A485A
1538001F14784913F0003FEB03E0EC3F80397FFFFE0014E090C8FCA2127E12FEA5127EA2
1504150E151C003E143C15786C14E06CEB03C03907800F803903C07E003801FFF838007F
801F2777A528>I<EC07E0EC1FF891387C1C309138F80E78903901E007F8903803C00313
07EB0F80D91F0013F0491301137EA201FEEB03E05B1201A24848EB07C0A44848EB0F80A4
ED1F005BA25D153E0003147E15FEA26C6C485A0000EB037CEB780EEB3C3C90381FF8F8EB
07E090C7FCA24A5AA44A5AA2001C5C007E13074A5A00FE91C7FC141E485B007813F8387C
03F0381FFFC0D807FEC8FC25387CA528>103 D<EB03E0EBFFF0485B7E1307A25CA4495A
A449C8FCA4133EA490387C07F0EC1FFCEC7C1EECE00F9039F9C00780EBFB80EBFF004914
C0485AA25B5B0003EC0F80A25BA24848EB1F00A3153E485AA25DA248C7FCEDF80EA3003E
903801F01CA3EDE0385A1630167016E048903800E1C0ED7F800070EC3E00273D7ABB2C>
I<14E0EB01F0EB03F8EB07F0A2EB03E0EB01C090C7FCAC13F8487EEA030EEA060F120C00
1C1380121812381400485AA3EAE03EA2C65AA35BA3485AA3485AA23807C070A3380F80E0
A3EB01C0A2EB038014005BEA070EEA03FCEA01F0153A79B81A>I<EB03E0EBFFF0485B7E
1307A25CA4495AA449C8FCA4133EA449EB07C0ED1FE0ED7870EDE0F89038F80181EC0303
1406020C13F03801F01891383001C04AC7FC5CEA03E1EBE38001E6C8FC13FC485AEBFF80
EBDFE0EBC1F0380F80F8143C143E80EA1F0016E0A3003E90383E01C0A3ED03805A141EED
0700EC0E06486D5AEC03F800706D5A253D7ABB28>107 D<EB0F803803FFC04813807EEA
001FA21400A4133EA45BA45BA4485AA4485AA4485AA4485AA448C7FCA4123EA45A130EA3
485AA45BA2EA7870A2EA38E0EA1FC06C5A123D78BB16>I<D803E001FEEB03F83C07F003
FF800FFE3C0E380F83C03E0F3D1C3C1C01E0700780903C1E3800F0E003C0003849EBF1C0
4AEBF380D93FC0D9FF0013E00070495BA291C75A013E5CD8E07E0101EC07C0A2D8007C5C
A2494948EB0F80A3F01F004848495AA2183EA24848495AF07C07A3484849C7EAF80EA3F0
F01C4848133E19181938197048C748EC70E0F03FC0000E0238EC1F00402779A546>I<D8
03E013FE3A07F003FF803A0E380F83C03A1C3C1C01E06D486C7E00385B5CD93FC07F0070
5BA291C7FC133ED8E07E495AA2EA007CA249495AA34B5A485AA24B5AA2485A92381F01C0
A3484890383E0380A392383C0700485A16065E161C48C7EA1C38ED0FF0000EEC07C02A27
79A530>I<EC3F80903801FFE0903807E0F890380F803C90383E001E49131F5B0001EC0F
80485A4914C01207485AA2485A123FA290C7121F5AA300FEEC3F80A316005D48147E15FE
5D5D007C13014A5A007E5C003E495A4A5A6C49C7FC6C137C3807C1F83801FFE06C6CC8FC
222777A52C>I<90390F8007E090391FC01FF8903938E0783C903970F0E01E913879C01F
9039E07B800FDA7F00138014FE48484814C0A25CA2380381F0A2EA0001A24948131FA449
48EB3F80A3170049485B167EA25E131F4B5A5E4B5A013F5C6E485A013E49C7FCECE01E90
387C707CEC3FF0EC0FC091C9FC5BA4485AA4485AA31207B57EA32A377FA52C>I<3903E0
01F83907F00FFE3A0E381E0780381C3C3890391E700FC00038EBE01FEB1FC0D93F801380
12709138000E0092C7FC133EEAE07E137C1200A25BA4485AA4485AA4485AA4485AA448C9
FCA2120E222779A524>114 D<14FF010313C090380F81E090381C007049133813780170
137801F013F8EBE001120115F0EC00E06D1300A213FEEBFFE06C13FC6D7E6D7E6D138001
0313C0EB003FEC0FE014071403121C123E127E00FE14C0A248148048130700E014000070
130E5C6C5B381F01F03807FFC0D801FEC7FC1D277AA523>I<EB0380EB07C0A3EB0F80A4
EB1F00A4133EA45B007FB5FCB6FC14FE3800F800A4485AA4485AA4485AA4485AA448C7FC
141CA21438123E1430147014E0A2EB01C0381E0380EB0700EA0E0EEA07FCEA01F0183778
B51D>I<13F8486C1470D8070E14F8EA060F000CEC01F0001C138012181238ED03E03870
1F00A3D8E03EEB07C0A2C65AA2ED0F805BA34848EB1F00A44848133E1607A3ED7C0EA315
FC0201131C12019138033C182600F00613389039783C1C7090393FF80FE090390FE007C0
282779A52E>I<13F8486C1470D8070E14F8EA060F000CEC01F0001C138012181238ED03
E038701F00A3D8E03EEB07C0A2C65AA2ED0F805BA34848EB1F00A44848133EA45DA315FC
4A5A120114033800F0069038783DF0EB3FF9EB0FE1EB00014A5AA25D001C1307003E5C00
7F130F92C7FC007E131E143E0078133C00705B5C383803C0381C0F80D80FFEC8FCEA03F8
253879A52A>121 D E /Fd 26 124 df<913801FFC0023F13F891B57E0103EB807E9039
0FFC000FD91FF0EB3F804948497E494813FF13FF5C5AA3705A70C7FC93C8FCA692381FFF
E0B8FCA40001903880007FB3AC007FD9FE1FB51280A4313C7EBB37>12
D<EA0F80EA1FC0EA3FE0EA7FF0EAFFF8A5EA7FF0EA3FE0EA1FC0EA0F80C7FCACEA0F80EA
1FC0EA3FE0EA7FF0EAFFF8A5EA7FF0EA3FE0EA1FC0EA0F800D2679A51B>58
D<B812C017FCEFFF8018E028007FF8000313F89338003FFEEF0FFF717F05017F717F727E
727EA2727EA2727EA28584A21A80A41AC0AC1A80A41A0060A261181F61183F614E5A4E5A
4D5B4D5B050F90C7FCEF3FFE933803FFF8B95A18804DC8FC17C0423B7CBA4C>68
D<DB1FFF14304AB500E013F0020FECFC01027FECFE03903B01FFFE007F874901E0EB0FCF
010F90C7EA03FFD91FFC804948EC007F4948153FEBFFC048171F4849150F4890C9FC4817
075B001F1703A2485A1801A2127F5B95C8FCA212FFAA040FB612E0127FA27F93C7EBF000
123FA36C7EA2120F7F7E6C7F6C7F6C7F6D7E6D6C5CEB1FFE6D6C6C5B010301E0130F6D01
FEEB7FCF6D6CB61203020FECFE00020102F81330DA001F018090C7FC433D7BBB4E>71
D<903A03FF800180011FEBF003017FEBFC0748B6120F4848C6139FD807F0EB0FFF484813
0348487F4848EB007FA248C8123F161FA248150FA36D1407A27F7F01F891C7FCEA7FFEEB
FFF014FF6C14F815FF6C15C06C15F06C816C816C816C6C806D15801307D9007F14C01407
DA003F13E01503030013F0167F163F0070151F12F0A2160FA27E17E0A27EEE1FC07E6C16
8001C0143F01F0EC7F0001FCEB01FE3AFCFFC007FC486CB512F0D8F01F5CD8E003148027
C0003FFCC7FC2C3D7BBB37>83 D<003FB912C0A4D9F800EBF001D87FC09238003FE04916
1F90C7150F007E1707007C1703A300781701A448EF00F0A5C81600B3AF011FB77EA43C3A
7CB945>I<90381FFF8048B512F04814FC3907F003FF486CC67F486C6D7E6F7E82151F6C
4880A26C5AEA01C0C8FCA391B5FC130F90387FFC1F3801FFC03807FE00485AEA1FF0123F
485AA2485AA4153F6C7E156F3A3FF001CFFC3B1FFC0787FFF00007B512070001EBFC033A
003FF0007F2C267DA530>97 D<13FFB5FCA412077EB04AB47E020F13F0023F13FC9138FE
03FFDAF000138002C0EB3FC04AEB1FE091C713F0EE0FF817FCA2EE07FEA317FFA917FEA3
17FC160F17F8A2EE1FF06EEB3FE06EEB7FC0D9FDF0EBFF809026F8FC0713009039F03FFF
FCD9E00F13F0D9C00390C7FC303C7DBB37>I<ECFFF0010F13FF013F14809039FFC01FC0
489038003FE0D803FCEB7FF01207485A485AED3FE0123FED1FC04848EB070092C7FCA212
FFA8127FA27F123FA2001F15787F000F15F06C7E6C6CEB01E03A01FF8007C06C9038E01F
80013FB51200010F13FC010013C025267DA52C>I<EE3FC0ED3FFFA4150181B0ECFFC001
0F13F8013F13FE9038FFE03F48EB000F4848130348487F48487F485AA2123F5B127FA312
FFA9127FA36C7EA2121F6C6C5B00075C6C6C5B6CB44913E06CD9C07E13FF90383FFFFC01
0F13F001011380303C7DBB37>I<49B47E010F13F8013F13FE9038FF80FF3A01FE003F80
D807FCEB1FC04848EB0FE016F048481307003F15F8A2485AED03FCA312FF90B6FCA301E0
C8FCA4127FA3123F6D143C121FA26C6C14786C6C14F86C6CEB01F06C6CEB07E06C9038C0
3FC0013FB51200010713FC010013E026267DA52D>I<EE1F80D907FEEB7FC0903A7FFFE1
FFE048B538FBE7F03A03FE07FF073907F801FE390FF000FF001FED87E0484890387FC3C0
EEC000007F81A7003F5DA26C6C495A000F92C7FC6C6C485A3903FE07FC48B55AD80E7F13
E0D907FEC8FC001ECAFCA4121F13C090B512FCEDFF806C15F06C81826C8182000F168039
1FC0000748C8FC48ED3FC000FE151FA5007FED3F80A26C6CEC7F006C6C14FED80FF0EB03
FCD807FEEB1FF80001B612E0D8003F91C7FC010313F02C397DA631>103
D<13FFB5FCA412077EB0ED7FC0913801FFF802077F91380F03FE91381C01FF023014804A
7E02E014C05C5CA391C7FCB3A4B5D8FC3F13FFA4303C7CBB37>I<EA01F0EA07FC487EA2
487EA56C5AA26C5AEA01F0C8FCAA13FF127FA412077EB3AAB512F8A4153D7DBC1B>I<13
FFB5FCA412077EB3B3AEB512FCA4163C7DBB1B>108 D<01FED93FE0EB07FC00FF902601
FFFC90383FFF8002076D90B57E913C0F81FF01F03FE0DA1C00903983801FF0000749DAC7
007F00030160D97FCC130F02E002FC804A5C6D485CA391C75BB3A4B5D8FC1FB50083B512
F0A44C267CA553>I<01FEEB7FC000FF903801FFF802077F91380F03FE91381C01FF0007
013014800003497E02E014C05C6D5AA391C7FCB3A4B5D8FC3F13FFA430267CA537>I<EC
FFC0010F13FC013F13FFD9FFC013C03A01FE001FE0D807FCEB0FF849130748486D7E001F
81003F81497F007F1680A400FF16C0A9007F1680A36C6C491300A2001F5D6C6C495AA26C
6C495A6C6C495A3A00FFC0FFC0013FB5C7FC010F13FC010113E02A267DA531>I<9039FF
01FF80B5000F13F0023F13FC9138FE03FFDAF0001380000301C0EB7FC04AEB3FE091C713
F0EE1FF817FC160F17FEA2160717FFA917FEA2160F17FCA2EE1FF8A2EE3FF06E14E06EEB
7FC09139F001FF80DAFC07130091383FFFFC020F13F0020390C7FC91C9FCADB512FCA430
377DA537>I<9038FE01FC00FFEB07FF4A138091381E1FC09138383FE000079038707FF0
0003136014C0A201FFEB3FE01480ED1FC0ED070091C8FCB3A3B512FEA424267EA529>
114 D<90383FF8383901FFFEF8000713FF380FC00F381F0003003E13005A157812FCA27E
6C6C130013F0EBFF806C13FC14FF6C14C06C14E06C14F06C14F8000114FCD8003F13FE13
019038000FFF14010070EB007F12F0153F7E153E7E7E6C147C6D13F89038F007F000FDB5
12E000F0148039E01FFC0020267DA527>I<130FA55BA45BA25BA25B5A5A5A001FEBFFF0
B6FCA3000390C7FCB3153CA86C147814806C14F090387FC1E090383FFFC0010F13809038
01FE001E377EB626>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A45DA25D7E15066CD9
800E13E090267FC03C13FF90383FFFF8010F13E00101138030267CA537>I<B500F8EBFF
FEA4000390C7EA0FC06E14806C16006E5B6C151E6E133E017F143C80013F5CA26E13F801
1F5CECFC01010F5CECFE0301075CECFF076D5C158F6D91C7FC15CF6D13DEA215FE6E5AA2
6E5AA26E5AA26E5AA26E5AA22F267EA534>I<B500F8EBFFFEA4000390C7EA0FC06E1480
6C16006E5B6C151E6E133E017F143C80013F5CA26E13F8011F5CECFC01010F5CECFE0301
075CECFF076D5C158F6D91C7FC15CF6D13DEA215FE6E5AA26E5AA26E5AA26E5AA26E5AA2
5DA2140F92C8FC000C5B003F131E387F803E38FFC03C147C14785C13C16C485AEB0FC06C
B4C9FC6C5AEA03F02F377EA534>121 D<B9FCA33003809831>123
D E /Fe 34 122 df<121C123E127FEAFF80A3EA7F00123E121C0909798818>58
D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA0300A21206A25A5AA25A
12200A1A798818>I<0103B712C018F818FE903B0007F80001FF02039138007F804A48EC
1FC019E0180F19F04A481407A44A5AA2180F19E04A5AF01FC0183F19804AC8EA7F0018FE
4D5AEF07F802FEEC1FE0EF7F8091B600FEC7FC5FD901FCC7EA7F80EF1FC0EF07F0717E49
5A717E84A249481400A4495A1701A349484A5AA24D5A604948140F4D5A4D5A4D5A49C748
48C7FCEE07FE49EC1FF8B812E0178004F8C8FC3C3B7CBA41>66 D<DC7FC01320922607FF
F81370033F01FE13E09238FFC01F913A03FC000781DA0FF0EB01C3DA1FC0903800E7C002
7FC8127F02FE153FEB01F84948ED1F80495A4948150F495A013F170049C9FC13FE844848
1606485AA20007170E4848160C1804484893C7FCA3485AA3485AA590CCFC5AA2184018C0
7E4D5AA34DC7FC7E6D15065F121F6D5D000F5E6C6C5D6D4A5A00034B5A6C6C4AC8FCD800
FE141ED97F8013F890391FF007F00107B512C0010149C9FC9038003FF03C3D7CBB3E>I<
0103B77E18F818FE903B0007F80003FF02039138007F804A48EC1FC0F00FE0F007F0F003
F84A48140119FC180019FE4A48157EA2197FA24A5AA44AC9FCA402FE16FFA4494816FE18
01A3494816FC180319F8A24948150719F0F00FE0A24948ED1FC0A2F03F80F07F00494815
7E18FE4D5A4D5A49484A5A4D5AEF1F80057FC7FC49C7EA01FEEE07F849EC3FE0B812804C
C8FC16E0403B7CBA47>I<0103B812F8A390260007F8C7121F18014B14001978A219704A
481530A44A5AA21960A24A4813101730A219004AC75AA217E0A202FE495A160F91B6FCA2
495D9138FC000F16071603494891C8FCA31980494801061301A2F0030093C7FC49485D18
06180E180C4948151C1818183818304948157018F04D5A170349C8EA0FC0173F49913803
FF80B9FC95C7FCA23D3B7CBA40>I<DC7FE01310922607FFFC1338033F6D13709239FFC0
1F80913B03FE0003C0F0DA0FF0EB00E1DA1FC0EC73E04A48143702FEC8121F495AD903F0
ED0FC0495A49481507131F4948168049C9FC13FEA24848EE030012035B00075F48481606
1802484893C7FCA3485AA3485AA590CCFC48031FB512804C14C019809339001FF0006C70
5AA24D5AA36C7E4D5AA26C7EA26C6C4BC7FC12076C6C5D7F6C6CEC03BE6CB4EC073ED93F
C0EB3E1E90391FF801F80107B5EAE00C0101EC80049026001FF8C9FC3D3D7CBB44>71
D<0103B5D8FC01B512FEA390260007FCC73803FE004B5D4B5DA44A484A5AA44A484A5AA4
4A484A5AA44AC8485AA402FE4BC7FCA291B8FCA2495E02FCC8FCA349484A5AA449484A5A
A449484A5AA449484A5AA449484A5AA449C8485AA249157FB6017FB57EA3473B7CBA48>
I<0103B6FCA390260007FCC8FC6E5A4A5AA44A5AA44A5AA44A5AA44AC9FCA414FEA4495A
A4495AA4494815C0A3EF0180495AA2EF0300A249485C1706170E171E4948141C173C177C
5F49C71203EE0FF04914FFB8FC5FA2323B7CBA3B>76 D<902603FFF891380FFFFE81A290
260003FE9138007FC0F13E00DA06FF151C6F1518A26F7E020C5E82151FA24A6C6C5CA26F
7EA202306D5C1503A26F7E02604B5A821500A24A017F49C7FCA2EE3F80A24948ECC00616
1FA2EE0FE049C75C17F01607A201066E6C5AA2EE01FCA2496F5A1600A2177F495E18E017
3FA2496F5AA2170F13706001F01507EA07FCB500E0140395C8FC83473B7CBA45>78
D<0103B612F8EFFF8018E0903B0007F8001FF80203EC03FC4A48EB00FE187FF03F80A24A
4815C0A44A5AA44A48EC7F80A2F0FF00604AC7485A604D5AEF0FE002FEEC1F80057FC7FC
EE07F891B612E04992C8FC9139FC000FC0EE03F0707E49486D7EA2177EA24948147FA449
4814FEA449481301A4494813034D1330A2196049C7120119C0496E7EB691387E03809438
3F07004AEC1FFCCAEA03F83C3C7CBA41>82 D<DB1FE013809239FFFC01C002039038FF03
8091390FE01F8391391F0003C7023EEB00EF0278EC7F004A80495A4948800107151E5C13
0FA249C8120CA3171C17186E140894C7FC80808014FF6D13E06D13FEEDFFC06D14F06D80
6D6C7F021F7F02017FEC003F03037FED007F163F161F83A2160F00045E120CA4001C4BC7
FCA2161E163E003C153C003E5D5E003F1401486C495AD87DC0495AD878F0011FC8FCD870
7F137E486CB45AD8C00F13F001001380323D7BBB35>I<267FFFFC91380FFFF0B56C4A13
F84A6E13F0000190C80001130049ED00F8606000005F1701604DC7FC5F17066D5D7F5F5F
A25F17E06E5C4C5A133F4CC8FC1606A25E6E5BA2011F5C167016605EA24B5A6E48C9FCA2
010F13065DA25D1538ECF0305D13075DECF180A202F3CAFC14FEA26D5AA25C5CA25C5CA2
6D5A3D3C7BBA32>86 D<267FFFF890267FFFFC90381FFFE0B56C90B54A13F04A6D4915E0
000390C7000390C73803FE0001FCDA01FCEC00F86363000162A2505A0403150398C7FC04
071506160D621619715C043015381A3004605D6D14E004C05D0000EC01804F5ADB030014
0397C8FC03061506150E030C5D5D614B7F715B4B5D15E06D495D4A5A017F4C5A4AC7FC4E
C9FC02065D18064A5D5C605C18B04AEC3FF0604A5DA24A5D6DC8FC95CAFC133E173E013C
153CA2013815381330543C7BBA51>I<91B500FC90380FFFFC704913FE4C15FC020301C0
01031380020090C73801FC00F000F0F001C06F6C5C4EC7FC6F6C130660031F141C705B60
6F6C5B4D5A0307495A04F890C8FC17066F6C5A5F6F6C5A5F03005B705AA2167FA2163F83
167F8316DF9238018FF0ED030FED0607030C7F15184B6C7E1560EDE001DA01C07FEC0380
4AC77E140E4A6E7E14184A143F4A815C49486E7E49C8FC49150F011F82137F2603FF80EC
3FF8007F01F00103B512F0B55C6C81473B7EBA47>I<147E49B47E903907C1C38090391F
0067C0013E136F49133F5B4848131F00031580485AA2485A001FEC3F005B123FA290C712
7E5AA300FE5CA44A5A481506A3913803F00CA2127C02071318140F6C131B001E01311330
6C01E11360260783C013E03A03FF007FC0D800FCEB1F0027277DA52D>97
D<EC1FE0ECFFF8903803F01C90380FC00649C67E013E131F495B495B48485B485A120748
48137E153C001F91C7FC485AA290C9FC5AA312FEA65AA21680007C1401007EEC0300003E
14065D6C14386C14F039078003C02603E01FC7FC3800FFFCEB3FE021277DA525>99
D<163F92380FFF804B130081ED007FA2167EA45EA44B5AA44B5AA491387E07E0903801FF
87903807C1C790381F0067013EEB6FC049133F5B4848131F00035D485AA2485A001F4AC7
FC5B123FA290C7127E5AA300FE5CA44A5A481506A34A485AA2127C02075B140F6C131B00
1E01315B6C01E15B260783C013E03A03FF007FC0D800FC011FC7FC293D7DBB2D>I<EC1F
E0ECFFF8903807F03C90380F800E90383F0007137C5B485A1203485A120F49130E121F49
133C003F14F0EC0FE048B5128002F8C7FC90C9FCA2127E12FEA4127EA316801501003EEC
030015066C5C15386C6C13F00007EB03C02603E01FC7FC3800FFFCEB3FE021277DA528>
I<EC03F0EC1FFC91383E0E1C9138F8033E903901F001FEEB03E0903807C000495A011F14
FC49C7FCA2137E01FEEB01F85B1201A249EB03F01203A34848EB07E0A4ED0FC05BA30003
EC1F80A2153F6C6C137FEDFF000000EB01BF903878033FEB3C1E90381FFC7EEB07E090C7
FCA25DA44A5A121E003F5C48130348495A5D4A5A4849C7FC0078137E383C01F8381FFFE0
000390C8FC27387FA529>103 D<EB03F0EBFFF8485B7E1307A25CA4495AA4495AA449C9
FCA490387E03FCEC0FFF91383C0F8091387007C09039FCC003E0EBFD80EBFF004980485A
A25B5E48481307A44848495AA34B5A485AA24BC7FCA2485A037E13C0A348C738FC0180A2
EE030015F8007E1506A25EED7818481570007CEC3FE00038EC0F802A3D7CBB32>I<1470
14F8EB01FC1303A214F8EB01F0EB00E01400AC137CEA01FEEA038738060780000C13C012
18A2EA300FA21260EB1F80A212C0EB3F001200A2137EA25BA3485AA3485A140CA2EA07E0
1418EA0FC01430A214601380000713C0EB81803803C300EA01FEEA007C163B7EB91E>I<
ED0780ED0FC0151F16E0ED3FC0151F1680ED0F0092C7FCACEC07C0EC1FF0EC7878ECE07C
903801803C903803003EA20106137E5BA25BA2495BA290C7FCA24A5AA44A5AA44A5AA44A
5AA44A5AA44AC7FCA4147EA45C121E003F5BEA7F0100FF5B495A495A48485AD8781FC8FC
EA307EEA1FF8EA0FC0234C81B923>I<EB0FC03803FFE014C0A2EA001FA21480A4EB3F00
A4137EA45BA4485AA4485AA4485AA4485AA4485AA448C7FCA4127E1303A3EAFC06A35BA3
EA7C18A2EA3C30EA1FE0EA07C0133D7CBB1A>108 D<D801F0D91FC0EB3FC0D803FCD9FF
F0EBFFF03D061E01E07C03C0F83D0C1F07003E07007C26180F0E020C7F02986D5A003001
B05CD91FE002E0133F5F00605B4A5C193E4848C748C7127EA21200A2017E027E5CA34E5A
495CA24E5AA24848495A953807E00CA34848494890380FC018A21A301980484849481560
A21AC0953807818048484948EC870000070207EC03FE6C486D48EB00F846277EA54C>I<
D801F0EB3FC0D803FCEBFFF03A061E03C0F83A0C1F07007C26180F0C7F1498003013B0D9
1FE0133F5C12605C163E4848C7127EA21200A2017E5CA34B5A5BA24B5AA2485A923807E0
0CA3484890380FC018A21730168048481560A217C092380781804848EC87000007EC03FE
6C48EB00F82E277EA534>I<EC1FE0ECFFFC903803F03E90380FC00F90391F000780013E
EB03C04914E04914F0484813011203484814F8485AA2121F5B003F140390C7FC5AA300FE
EC07F0A3ED0FE0A216C048141F1680007CEC3F00007E143E157E003E5C5D6CEB03E06C49
5A6C6C485A2603E07EC7FC3800FFF8EB3FC025277DA52A>I<90390F8003F090391FE00F
FC903930F03C1F903A60F87007809038C078C091397D8003C02701807F0013E014FE17F0
48485AA3380601F8A21200A249481307A44948EB0FE0A317C04948131F1780A2EE3F0049
5A167E167C5E496C485A5E91386003C0ED0F8090267E383FC7FCEC1FFCEC07E091C9FC5B
A4485AA4485AA31207B512C0A32C3783A52B>I<D801F0137E3903FC03FF3A061E078180
3A0C1F0C03C03A180F180FE0ECB01F003013E0131F02C013C0006001801380ED0F0092C7
FC4848C8FCA21200A2137EA45BA4485AA4485AA4485AA4485A12076C5A23277EA527>
114 D<EC7F80903801FFE0903807C07090380E001849130C133C0138137C017813FCEB70
0113F0A29038F800F815606D1300EBFF8014FC14FF6D13806D13C06D13E0010713F0EB00
7FEC07F814011400121E123F5A4814F0A24814E04813014814C00060EB03800070EB0700
6C131E000F137C3807FFF0C613801E277CA528>I<EB01C0497E1307A2495AA4495AA449
C7FCA4137E007FB51280B6FC1500D800FCC7FCA4485AA4485AA4485AA4485AA4485A1406
A25CEA3F005CA25CA25C6C5B495AD80F07C7FCEA07FEEA01F819377DB51F>I<137C48B4
143826038780137C260607C0137E000C5D80121812304B5A38600FC0A3484848485AA212
00EB3F004B5A137EA349495AA44848495A1760A392383F00C0A3EE0180157F000014FF91
39019F030090397C031F0690393E0E0F0E90391FFC07FC903903F001F02B277EA531>I<
D903F013FC90390FFC01FF903A3C1E0303809026700F0613C0903AC0078C0FE0D80180EB
D81FD8030013F0A2000602E013C0178048ED0F0093C7FC48495AA2C7FCA24A5AA44AC8FC
A4147E1603A3001E491306123FD87F805C1381D8FF015CD9033C5B007E013E5B267C061E
5B3A381C0F0780271FF807FFC7FC3907E001F82B277EA531>120
D<137C48B4141C26038780133E260607C0133F000C157E801218123016FC48485AA33AC0
1F8001F8A21200EB3F00ED03F0137EA349EB07E0A44848EB0FC0A4ED1F80A4ED3F000000
5C5D90387C01BF90383E077EEB0FFEEB03F890C7FC5DA25D380F8001D81FC05B003F1303
5D49485A4A5A010090C7FC0030131E5C6C13F8380E03E03807FF80D801FEC8FC28387EA5
2A>I E /Ff 13 122 df<B612C0A61A067F9822>45 D<BA1280A3C601F0C7120F6D4802
0013C0013F163F181F180F18071803A2180119E0A21800A51970A217E0A21900A41601A3
16031607163F91B6FCA39138E0003F160716031601A31600A3190EA394C7121CA5193CA2
1938A21978A219F8A2F001F01803A2180F181F017F167F496CEC07FFBA12E0A33F477DC6
46>69 D<BAFCA3C601F0C7121F6D4802011380013FED007F183F181F180F1807A2180319
C0A21801A5F000E0A3EE01C01900A51603A31607160F167F91B6FCA39138E0007F160F16
071603A31601A693C9FCB1497EEBFFFCB7FCA33B477DC643>I<49B414C0010FEBF00101
3F13FC90397E00FF03D801F8EB0F87D803E0EB03C74848EB01EF4848EB00FF90C8127F48
153F003E151F160F5A1607A212FC1603A46C1501A27EA26C6C91C7FC7F7FEA3FF813FF6C
13F06C13FF15F06C14FE6C6E7E6C15E06C6C806D80010F80010080020F7F02011480EC00
1F030313C01500EE3FE0161FA2EE0FF0A20060150712E0A21603A37EA217E0A27EEE07C0
7E6C1680160F6CED1F0001C0141ED8FDE05CD8F8F85C017E495A3AF01FE00FE0D8E007B5
5A010191C7FC39C0001FF82C497AC739>83 D<EE1FC0ED1FFFA3ED007F163F161FB3A3EC
1FE0903801FFFC903807F01E90391F80079F90393F0001DF017CEB00FF4848147F000315
3F5B4848141F120F121F5B123FA2127F5BA212FFAA127FA36C7EA2121FA26C7E163F6C7E
0003157F6C6C14FF6C6C903801DFE0017E9038039FF0903B1F800F1FFFC090380FE03E90
3801FFF89026003FC0EBC00032497DC739>100 D<EA01F0487E487E487EA56C5A6C5A6C
5AC8FCAE13FE127FA3120312011200B3B1EA03FFB512FCA316467DC51C>105
D<147C14FE497E491380A56D13006D5A147C91C7FCAEEC7F80EB7FFFA31300147F143FB3
B3AC123E007F1400EAFF80147EA2147C387F00FC007E5B383801F0381F03C03807FF80D8
01FEC7FC195B84C520>I<D801FCEB7F8000FF903803FFF091380781F891380C007C0003
49137E0001497F000049804A131FEBFD808301FFC7FCA35BB3AA2603FF80EB7FF0B5D8FE
1FB512C0A3322D7CAC39>110 D<EC3FE0903801FFFC903807E03F90391F800FC090397E
0003F0496D7E48486D7E4848147E0007157F4980000F16804848EC1FC0A2003F16E0A249
140F007F16F0A300FF16F8AA007F16F0A36C6CEC1FE0A3001F16C06C6CEC3F80A26C6CEC
7F000003157E6C6C5C6C6C495A017E495A90391F800FC090390FE03F80902603FFFEC7FC
9038003FE02D2F7DAD34>I<01FE13FF00FF010713E091381F01FC913838007E0003496D
7E000101C06D7E6C6C486D7E707E91C77F496E7E160183A2707EA21880A2177F18C0AA18
8017FFA21800A24C5AA24C5A5F6D4A5A804C5A6EEB1F80496C49C7FC027813FE91381E03
F891380FFFE0DA01FEC8FC91CAFCAF3803FF80B512FEA332417DAC39>I<3901FC01FC00
FFEB07FF91380E0F809138181FC000039038303FE000011360000013C0A29039FD801FC0
ED0F80ED070001FFC8FCA45BB3A77F00037FB67EA3232D7EAC28>114
D<130EA7131EA4133EA3137EA213FE120112031207001FB512FCB6FCA2C648C7FCB3A415
0EAB017E131C137F7F151890381F803890380FC070903807E0E0903801FFC09038007F00
1F417EBF28>116 D<B500F890387FFFC0A30003018090381FFE006C48C7EA07F80000ED
03E05F7F6D5D6E1307013F92C7FCA26D6C130EA26E131E010F141CA26D6C5BA26E137801
031470A26D6C5BA2ECFE0101005CA291387F0380A21587023F90C8FC15CFEC1FCEA215FE
6E5AA26E5AA26E5AA36E5AA25DA214035DA24AC9FCA25C140E003C131E007E131CB4FC5C
14781470485B387C01C038380380D81E0FCAFCEA0FFEEA03F832417EAB37>121
D E /Fg 71 123 df<DA07FC137F913A3FFF81FFC0913AFC03C7C0E0903B03F0006F81F0
903B07C001FF03F8903A0F8003FE0790391F0007FC5B017EED03F0923903F801E0017C01
0190C7FC13FCADB812FCA32800FC0001F8C7FCB3AC486C497E3B7FFFF07FFFF8A3353D7F
BC32>11 D<EC07FCEC3FFF9138FC0380903903F000C0D907C0136090390F8001F0494848
7E491307137EA2137C01FC6D5AED00C093C7FCAAED01F8B7FCA33900FC00071501B3AB48
6C497E3B7FFFF07FFFF0A32C3D7FBC30>I<DA07FCEB07FC913A3FFF803FFF913BFE03C0
FC0380903C03F00063F000C0D907C0D937C0136049489039FF8001F049484849487E4949
1407017E5CA2017C5C01FC01016E5A0300EC00C096C7FCAAF001F8BAFCA3D800FCC738FC
00071801B3AB486C496C497E297FFFF87FFFF8B512F0A3443D7FBC48>14
D<121C127FA2EAFF80A7EA7F00AB123EAB121CAB1208C7FCA8121C123E127FEAFF80A3EA
7F00123E121C093D79BC18>33 D<001C131C007E137E007F137F39FF80FF80A26D13C000
7F137FA2001C131C00001300A53901800180A33903000300A200061306A2485B485BA248
5B002013201A1A7DBB2B>I<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3
EA0300A21206A25A5AA25A12200A1A79BB18>39 D<146014E0EB01C0EB0380EB0700130E
5BA25B137813705B12015B1203A2485AA248C7FCA35A121EA2123EA2123CA2127CA51278
12F8B21278127CA5123CA2123EA2121EA2121F7EA36C7EA26C7EA212017F120013701378
13387FA27F7FEB0380EB01C0EB00E01460135678C021>I<124012E012707E7E7E7EA26C
7E7F12016C7E7F13701378A27FA27FA3131F7FA21480A21307A214C0A5130314E0B214C0
1307A51480A2130FA21400A25B131EA35BA25BA2137013F05B485A12035B48C7FCA2120E
5A5A5A5A124013567BC021>I<1518153CB3A7007FB812FEBAFCA26C17FEC8003CC8FCB3
A7151838387BB143>43 D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA
0300A21206A25A5AA25A12200A1A798818>I<B512FCA516057F941D>I<121C123E127FEA
FF80A3EA7F00123E121C0909798818>I<EB03FC90381FFF8090387E07E09038F801F048
486C7E4848137C48487F48487FA248C7EA0F80A24815C0A3007EEC07E0A500FE15F0B300
7E15E0A4007F140F6C15C0A36C15806D131F000F1500A26C6C133E6C6C5B6C6C5B6C6C48
5A90387E07E090381FFF80D903FCC7FC24397DB72B>48 D<EB01C013031307131F13FFB5
FCA2131F1200B3B3A8EB7FF0007FB512F8A31D3879B72B>I<EB0FF8EB7FFF48B512C039
03E03FE039070007F8000E6D7E00186D7E481300157F481580127C00FE143F6C15C07FA4
6CC7FC123EC8FC1680157F1600A215FEA24A5A5D4A5A4A5A5D4A5A4AC7FC143E143C5C5C
495A495A495A49C8FC011E14C013381330491301491480485A48C7FC00061403000FB6FC
5A5A481500B7FCA322387CB72B>I<EB07FC90383FFF8090B512E03901F807F03903C001
F848C77E000E80D80FC07F486C7F6D1480A46C5A6C5A0001C71300C85AA25D4A5A5D4A5A
5DEC0FC0023FC7FCEB1FFCECFF8090380007E0EC01F86E7E157E157FED3F8016C0A2ED1F
E0A216F0A3123F487E487EA216E0A2153F4914C06CC7FC0070EC7F806C15006C14FE390F
8001FC3907F007F80001B512E06C6C1380D907FCC7FC24397DB72B>I<151C153CA2157C
15FCA214011403A21407140F141D141914311471146114C11301EB038114011307130E13
0C131813381330136013E0EA01C01380EA03005A12065A121C5A123012705AB712FCA3C7
3801FC00AB4A7E49B512FCA326397EB82B>I<00061406D80780131E9038F801FC90B55A
5D5D5D92C7FC5C38067FF090C9FCABEB03FCEB1FFF90387C0FC09038E003E039078001F0
90C77E0006800004147EC8FC157FED3F80A316C0A4123E127F5A7FA290C71380A248147F
00601500A26C14FE00385C6C495A6C495A6C6C485A3903E01FC06CB5C7FC6C6C5AEB0FF0
22397CB72B>I<EC1FC0ECFFF0010313FC90380FE03E90381F800690383E000349131F49
EB3F804848137F1203485AA24848EB3F00001F141E4990C7FCA2123FA2127F90C9FCA2EB
01FE903807FFC039FF0E03E090381800F849137C497F153F49EB1F80A24914C0ED0FE0A2
90C7FC16F0A37EA56C7E16E0A2121FED1FC06C7E16800007EC3F006C6C133E6C6C5B6C6C
5B90387E03F06DB45A010F1380D903FEC7FC24397DB72B>I<12301238123E003FB612F0
A316E04815C01680A20070C7EA030000601406A25D00E05C485CA25DC85A4A5AA24AC7FC
1406A25C141C141814381478147014F0A2495AA21303A31307A25C130FA3131FA5133FA9
6D5A6DC8FC243B7BB92B>I<EB03FC90381FFF804913E09038FC03F03901E000F8D80380
133C90C77E4880120EED0780A2121EA2121FA27F6DEB0F00EA0FF06D131E01FE131C6C6C
5B6CEBC070ECE1E06CEBFBC06C01FFC7FC133F6D7F6D13E0497F017813FC3901E07FFE39
03C01FFF48486C1380380F0003001E010013C048EC7FE0151F48140FED07F04814031501
A21500A316E01278ED01C07EED03806CEC07006C6C130ED807E0133C3903FC01F8C6B512
E0013F1380D907FCC7FC24397DB72B>I<EB03FC90381FFF80017F7F9038FE07F03901F0
01F848486C7E4848137C000F804848133F003F80168048C7FC16C0A248140F16E0A516F0
A37E151FA26C7E001F143FA26C6C136F12076C6C13CF3901F0018F39007C070FEB3FFED9
07F813E090C7FCA3ED1FC0A31680D80780133F486C1400487E157E157C15FC49485AD80F
805B390C0003E00007EB0FC02603C03FC7FC3801FFFE6C13F8EB1FC024397DB72B>I<12
1C123E127FEAFF80A3EA7F00123E121CC7FCB3121C123E127FEAFF80A3EA7F00123E121C
092579A418>I<007FB812FEBAFCA3CCFCAEBAFCA36C17FE38167BA043>61
D<EB3FE03801FFFE3907C03F80390E000FC00018EB07E048EB03F04814F8140100FC14FC
7E7EA3127E123CC7EA03F8A215F0EC07E0EC0FC0EC1F80EC3E00143C5C5C5C13015C495A
A291C7FC5BA21306AA130490C8FCA8130E131F497E497EA36D5A6DC7FC130E1E3D7BBC29
>63 D<150C151EA3153FA34B7EA34B7EA39138019FE0A202037F150FA202077FEC0607A2
020C7F1503A202187F1501A24A6C7EA34A6D7EA202E0804A133FA20101814A131FA249C7
7F91B6FCA249810106C71207A2496E7EA3496E7EA2013881013080A20170820160157FA2
01F082EA03F8D80FFC4A487EB500C0013FEBFFC0A33A3D7DBC41>65
D<DBFFC01360020713F8023F01FE13E09139FFC01F01903A03FE000783D907F8EB01E3D9
0FE0EB0077D91F80143F017FC8121F01FE150F4915071201484815031207491501120F48
481500A2123F5B1860127FA25B180012FFAB127FA26D1660A2123FA27F121F18C06C7E12
076DED018012036C6CED03006C6C5D1706017F5DD91F805CD90FE05CD907F814E0D903FE
EB03C0903A00FFC01F8091263FFFFEC7FC020713F8020013C0333D7BBB3E>67
D<B712F816FF17C0C69039C0003FF06D48EB07FCEE01FEEE007F717E717E717E717EA271
7E84170184170084A3F07F80A419C0AC1980A4F0FF00A34D5AA2604D5AA24D5A4D5A4D5A
173F4DC7FCEE01FEEE07FC496CEB3FF0B85A94C8FC16F83A3B7EBA42>I<B91280A3C690
38C000016D48EB003FEF0FC017071703A21701A21700A418E018601630A31800A31670A2
16F0150391B5FCA3EC800315001670A21630A2180CA3181893C7FCA31838A21830A21870
A218F018E017011703170F173F496CEB01FFB912C0A3363B7EBA3B>I<B812FEA3C69038
C000076D481300173F8383A283A283A418801701A21660A294C7FCA416E0A21501150791
B5FCA3EC800715011500A21660A693C8FCAEEBFFE0B612F0A3313B7EBA38>I<DB7FC013
30913807FFF8023F01FE1370913AFFC01F80F0903A01FE0003C1D907F8EB00E1D90FE014
334948141F49C8120F017E150713FE48481503484815011207491500120F48481670A348
5A1830127FA25B95C7FC12FFAB007F037FB512C0A27F9339003FF800003FEE0FF0A26C7E
A36C7E12077F12036C7E6C7E137F6D6C141F6D7E6D6C1433D907F81473D901FEEB01E190
3A00FFE00FC0023FB5EA0070020701FC13309126007FE090C7FC3A3D7BBB44>I<B6D8C0
3FB512F0A3C601C0C7383FF0006D486E5AB3A591B7FCA30280C7121FB3A7496C4A7EB6D8
C03FB512F0A33C3B7EBA41>I<B612C0A3C6EBC0006D5AB3B3AF497EB612C0A31A3B7EBA
1F>I<B612F0A3C601E0C8FCEB7F80B3AE1706A5170E170CA4171CA3173C177CA2EE01FC
EE03F8160F496C137FB8FCA32F3B7EBA36>76 D<B56C4BB5FC6E5DA2C61900D96FE0ED06
FEA3D967F0150CA2D963F81518A3D961FC1530A2D960FE1560A3027F15C0A36E6CEB0180
A26E6CEB0300A36E6C1306A36E6C5BA26E6C5BA36E6C5BA26E6C5BA3037F5BA392383F81
80A2DB1FC3C7FCA3ED0FE6A3ED07FCA26F5AA213F0486C6D5AD807FE4C7EB527F000E001
B6FCA3483B7DBA4F>I<B56C91B512F08080D8007F923807FE006EEC01F8D96FF86E5A01
671660EB63FC801361EB60FF816E7E143F816E7E140F6E7E8114036E7E816E7F157F826F
7E151F6F7E8215076F7E826F7E81EE7F8017C0163FEE1FE017F0160FEE07F817FCEE03FE
1601EE00FF18E0177F173FA2171F170FA2170701F01503486C1501EA07FEB500F0140018
60A23C3B7EBA41>I<B712F016FF17C0C69039C0003FF06D48EB07F8707E707E707EEF7F
80A218C0173F18E0A718C0A2177F188018005F4C5A4C5AEE0FF0EE3FE091B6128004FCC7
FC0280C9FCB3A6497EB612C0A3333B7EBA3B>80 D<B77E16F816FEC69039C001FF80903A
7F80003FE0EE0FF0707E707E707EA2838284A795C7FC5E5F5F4C5A4C5A4C5AEE3F80DB01
FEC8FC91B512F816E091388003F8ED007E82707E83707E83160783A683A61930A2707EA2
04011460496C6D7EB600C06D13C094383F838094380FFF00CAEA01FC3C3C7EBA3F>82
D<D90FF81360EB3FFF90B5EAC0E03901F807E13907E000F1D80F80133B90C7121F48140F
003E14071503481401A212FC1500A316607EA27E6C15007F13E0EA3FF8EBFF806C13F86C
EBFF806C14E06C14F86C806C80013F7F01071480D9007F13C0020713E0EC007FED1FF015
0F150716F81503124012C01501A37EA216F07E15036C15E0A26CEC07C0B4EC0F80D8FB80
1400D8F1F0133ED8F0FE13FC39E03FFFF8D8C00F13E001011380253D7BBB30>I<003FB8
12F8A3D9E001EB800790C7EB0001007CEE007C0078173CA20070171CA20060170CA500E0
170E481706A4C81500B3B1020313C0010FB612F0A3373B7DBA3E>I<B500FE91381FFFF0
A3000301C0020313006C90C912FC6C17786E1570017F1660A26E15E0013F5E80011F4B5A
A26E1403010F93C7FCA26D6C1406A28001035DA26E141C01011518806D5DA26F1370027F
1460A26E6C5BA281021F495AA2EDF003020F91C8FC15F802071306A2EDFC0E0203130C15
FE02015BA215FF6E5BA216F06F5AA26F5AA36F5AA26FC9FCA315063C3C7EBA41>86
D<B5D8FC01B500FC90383FFFE0A300079026800007018001071300000190C76C48C7EA01
FC49725A6D020116706C1A60836E7F017F618480013F4E5AA2933801BFC06D6C4DC7FCA2
9338031FE06D6C1706A29338060FF06D6C5FA24C6C7E6D6C5FA24C6C7E6D6C5FA24C6C7E
6D6C5FA204707F91277F8060005CA204E014806F48EB7F81023F5F03C115C1DBE180EB3F
C3021F94C8FC03E315E303F3C7EA1FE7020F16E619F603FEEC0FFE02075EA24B14070203
5EA24B140302015EA24B140102005EA24B140003605D533C7EBA58>I<B6913807FFFCA3
000101E0020113C06C499138007E00017F16786D6C153018706D6C15606D6C5D17016D6C
5D17036D6C92C7FC6D6C1406170E6D6D130C171C6E6C13186E6C5B17706E6C136017E06E
6C5B6F485A02071303DA03FE90C8FC5E913801FF06168C6E139CED7FD816F86F5A5E151F
B3A24B7E023FB512F0A33E3B7FBA41>89 D<485B485B00061306A2485B485BA2485BA248
5BA3485BA500CE13CE39FF80FF80A26D13C0007F137FA2393F803F80001F131F390E000E
001A1A73BB2B>92 D<1330137813FC487EEA03CF38078780380F03C0381C00E048137048
133848131C48130C160C76BA2B>94 D<EB1FF0EBFFFC3803E03F3907000F80486D7E9038
C003E0486C6C7E81A214006C487F6C5AC8FCA4140FEB03FFEB1FF8EBFF00EA01FCEA07F0
EA0FC0485A123F90C7FC5A007E150612FEA31401A2007EEB037C127F3A3F80063E0C3A1F
C00C3F1C3A0FF0381FF83A03FFF00FF03A007FC007C027287DA62B>97
D<EA01F812FFA312071201B1EC0FF0EC3FFEECF01F9039F9C007C09039FB0003E001FE6D
7E496D7E167C49147E163E163FA21780161FA217C0A91780A2163F1700A2167E167C6D14
FC5E01F6495A01E3495A9039E1800F809026C0F03FC7FC9038807FFCC7EA0FE02A3D7EBB
30>I<EB03FE90381FFFC090383E01F09038F800384848133C484813FC3907C001FE120F
1380121F48C712FC1578481400A2127EA212FEA9127EA2127F6C1403A26C7E15066C7E00
07140C6C6C13186C6C13306C6C13E090387E03C090381FFF00EB03FC20287DA626>I<ED
07E0EC03FFA3EC001F1507B1EB01FC90380FFF8790383F03C790387C0067D801F0133748
48131F4848130F120F491307121F48C7FCA25A127EA212FEA9127EA2127F7EA27E6D130F
120F6C6C131F6C7E6C6CEB77F86C6C9038E7FFC090383E038790381FFF07D903FCEBE000
2A3D7DBB30>I<EB03FCEB1FFF90387E07C09038F801E03901E000F0000314784848137C
48487F121F90C7123F4880A25A007E1580A212FEA2B7FCA248C9FCA5127EA3127F6CEC01
80A26C7E000FEC03007F000714066C6C5B6C6C5BD80078137090383F01E090380FFF80D9
01FEC7FC21287EA626>I<147F903801FFC0903807C0E090380F81F090381F03F8EB3E07
137CA29038FC03F09038F801E0000190C7FCAEB512FCA3D801F8C7FCB3AC487E387FFFF8
A31D3D7FBC1A>I<903907F001F890393FFE0FFC90397C1F1E3E9038F007F03A01E003E0
1C2603C00113080007ECF000000F80EB8000001F80A7000F5CEBC00100075C00035C6C6C
485A6D485A26037C1FC7FC38073FFE380607F090C9FC120EA3120FA2EA07C090B512C06C
14FC6C14FF6C1580000315C03A0F80003FE048C7EA07F0003EEC01F8003C1400127C0078
157C12F8A5007C15F8A26CEC01F06CEC03E06C6CEB07C0D803E0EB1F00D801FC13FE3900
3FFFF00107138027397EA52B>I<EA01F812FFA312071201B1EC07F8EC1FFEEC781F9138
E00F809039F98007C0D9FB007F150301FE805BA35BB3A5486C497EB500F1B512E0A32B3C
7EBB30>I<EA0380487E487E487EA36C5A6C5A6C5AC8FCABEA03F012FFA3120F1203B3AB
487EB512C0A3123A7EB917>I<14E0EB01F0EB03F8EB07FCA3EB03F8EB01F0EB00E01400
ABEB01FC137FA3130313011300B3B3A3123C007E13F8B4FC130114F0A2387E03E0003C13
C0381C0F80380FFE00EA03F8164C84B91A>I<EA03F012FFA3120F1203B2913801FFFCA3
9138007FC0ED7E00157C157015604A5A4A5A0206C7FC5C5C5C147814FCEBF1FEEBF73EEB
FE3F9038F81F80EBF00F816E7E1403816E7E140081157E81A2ED1F8016C0486CEB3FF0B5
00C0B5FCA3283C7DBB2D>I<EA03F012FFA3120F1203B3B3AF487EB512C0A3123C7EBB17>
I<2701F803F8EB03F800FFD91FFFEB1FFF913B3C0F803C0F80913BE007C0E007C03D07F9
C003E1C003E02601FB00D9F3007F0301140101FE02FE80A2495CA2495CB3A5486C496C49
7EB500F0B500F0B512F0A344267EA549>I<3901F807F800FFEB1FFEEC781F9138E00F80
3A07F98007C02601FB007F150301FE805BA35BB3A5486C497EB500F1B512E0A32B267EA5
30>I<EB01FE90380FFFC090383F03F09038F8007C48487F48487F4848EB0F804848EB07
C0A248C7EA03E04815F0A3007EEC01F8A300FE15FCA9007E15F8A2007F14036C15F0A26C
15E06D1307000F15C06C6CEB0F806C6CEB1F006C6C133E6C6C5B90383F03F090380FFFC0
D901FEC7FC26287EA62B>I<3901F80FF000FFEB3FFEECF01F9039F9C007C03A03FB0003
E0D801FE6D7E49806F7E49147EA2167F821780A2161F17C0A91780163FA217005E167E5E
7F4B5A6D495A01FB495A9039F9800F809026F8F03FC7FCEC7FFCEC0FE091C9FCAC487EB5
12F0A32A377EA530>I<D901FC13C090380FFF0190383F03819038FC00C3D801F0136348
48133712074848131F485AA2003F140F90C7FC5AA2127E12FEA9127E127FA27EA26C7E15
1F6C7E0007143F6C6C136F6C6C13EF3900F801CF90387E070FEB1FFEEB03F890C7FCACED
1FE00203B5FCA328377DA52D>I<3903F00F8000FFEB3FE0EC70F0ECC1F83807F1833801
F303A29038F601F0EC004001FC1300A45BB3A3487EB512F8A31D267EA522>I<90387F81
803803FFE3380F807F381E001F00381307A2481303A200F01301A37EA200FE90C7FCEA7F
8013FC383FFFC06C13F06C13FC00037F6C7FD8001F13801300EC1FC00040130F00C0EB07
E014036C1301A47E15C06C13036C1480EC070000F7130E38E3C03C38C0FFF8EB3FC01B28
7DA622>I<1330A61370A413F0A21201A212031207001FB5FCB6FCA2D803F0C7FCB2EC01
80A912019038F80300A21200EB7C066D5AEB1FF8EB03F019367EB421>I<D801F8EB03F0
00FFEB01FFA30007EB000F00011403B3A51507A30000140FA26D131B017C14FC6D903873
FFE090381F81E390380FFF83903A01FE03F0002B277EA530>I<B538801FFFA33A07F800
07F86C48EB03E0ED01C06C7E16806D130300001500A2017E1306A2137F6D5BA2EC801C01
1F1318A26D6C5AA2ECE07001071360A26D6C5AA214F901015BA26DB4C7FCA3147EA2143C
A3141828267EA42D>I<B53B87FFF80FFF80A33D0FF8003FC003FC006C486DC75A00035F
701360A26C6C5E8215376C6C4B5AED77E06D01631303017E93C7FCEDE3F0017F01C15B6D
1506020113F8DA8180130E011F150C028313FC9139C3007C1C010F151802C7137E02E6EB
3E380107EC3F3002EC131FD903FC5C17E04A130F01015DA24A130701005DA24A13030260
91C8FC39267EA43E>I<B539C03FFF80A300039039001FF000C648EB0FC093C7FC017E13
0E6D130C6D6C5AECC038010F5B6D6C5A6D6C5AECF980EB01FB6DB4C8FC147E147F80814A
7EEC6FE014C7903801C3F090380381F8EC01FCEB0600010E137E497F49800130131F0170
6D7ED801F880000F4A7ED8FFFE90387FFFC0A32A257FA42D>I<B538801FFFA33A07F800
07F86C48EB03E0ED01C06C6C1480A26D130300001500A2017E1306A2017F130E6D130CA2
6D6C5AA2ECC038010F1330A26D6C5AA2ECF0E001035B14F8903801F980A214FF6D90C7FC
A2147EA2143CA31418A25CA35CA25C1210EA7C0100FE5BA249C8FC5BEAFC0EEA701C6C5A
EA1FF0EA07C028377EA42D>I<003FB512FEA290388000FC393E0001F8003C1303003814
F00030EB07E00070130FEC1FC000601480EC3F005C147E5CEA0001495A5C495A130F5C49
5A013F1303EB7F00137E5B1201491307485A12074848130649130E485A003F141E90C712
7E007EEB01FEB6FCA220257EA426>I E /Fh 16 107 df<EB03C0A2805CA50030140C00
7C143E00FE147F007F14FEEBC3C3391FE187F83907F18FE03900FDBF00EB3FFCEB0FF0EB
03C0EB0FF0EB3FFCEBFDBF3907F18FE0391FE187F8397FC3C3FEEB03C000FE147F007C14
3E0030140C00001400A5805CA220257BA72B>3 D<EB0FF0EB7FFE48B512804814C04814
E04814F04814F84814FCA24814FEA3B7FCA86C14FEA36C14FCA26C14F86C14F06C14E06C
14C06C148039007FFE00EB0FF020207BA52B>15 D<007FB812FEBAFCA26C17FECCFCAD00
7FB812FEBAFCA26C17FECCFCAD007FB812FEBAFCA26C17FE38267BA843>17
D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FF9338007FC0EF1FF01707171FEF7FE0933801FF00EE07FCEE1FF0EE7FC04B48C7FCED
07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848
CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAD007FB812E0B912F0A26C17E0344479
B643>21 D<14301478A25CA313015CA2495AA2495A130F91CDFC131E5B137C5B485AEA07
E0EA1FC0007FBB1280BC12C0A26C1A80D81FC0CDFCEA07E0EA01F06C7E137C133C7F7F80
13076D7EA26D7EA2801300A31478A214304A2E7AAC56>32 D<18034E7EA2727EA3851801
A2727EA21978197C193C858586737E737EF101F8F100FE007FBB1280BC12E0A26C1A80CD
EAFE00F101F8F103E04F5A4F5A97C7FC191E61197C197861A24E5AA2180361A34E5AA272
C8FC4B2E7BAC56>I<020FB51280027F14C049B6FC01071580D91FF8C8FCEB3FC049C9FC
13FCEA01F0485A485A485A90CAFC5A121E123E123C127C1278A312F85AA2B8128017C0A2
178000F0CAFCA27E1278A3127C123C123E121E121F7E7F6C7E6C7E6C7EEA00FC137FEB3F
C0EB1FF80107B61280010115C06D7E020F14802A3479AF39>50 D<0060160600F0160FA2
6C161F0078161E007C163E003C163CA2003E167C001E1678A2001F16F86C16F06D140100
0716E0A26D1403000316C06D140700011680A290B7FC6C1600A30178C7121E017C143E01
3C143CA2013E147C011E1478011F14F86D5CA2EC800101075CECC00301035CA2ECE00701
015CA2ECF00F010091C7FC6E5AEC781EA2EC7C3EEC3C3CEC3E7CEC1E78A2EC1FF86E5AA3
6E5AA26E5AA26E5A303D80BB31>56 D<007FB612F0B712F8A27EC91278B3A6003FB612F8
5AA27EC91278B3A6007FB612F8B7FCA26C15F0253C7BBB30>I<15301578A215F85DEB07
F8EB1FFEEB7C0F9038F003E03801E0014848487ED807807F000F80EB00074814BE001E14
9EA2003EEB0F9F151FA2007E011F1380007CEB1E0FA3143E143C00FC15C0147C1478A214
F814F0A3130114E0A2130314C0A313071480A2130F1400A2D87C1F1480131EA2007E141F
133ED83E3C1400A2137CD81E78131E001F143EA2D80FF8133C49137C0007147800035C6C
48485A6D485A3903FC0F80D9DFFEC7FCEBC7F801C0C8FC12075BA26CC9FC22487CC12B>
59 D<126012F0B3A9B8128017C0A2178000F0CAFCB3A912602A3C7BBB35>96
D<15FC140FEC3F80EC7E0014F8495A495A1307A2495AB3A9495AA249C7FC137E5BEA03F8
EA7FE048C8FCEA7FE0EA03F8C67E137E7F6D7EA26D7EB3A96D7EA213036D7E6D7E147EEC
3F80EC0FFC14001E577AC02B>102 D<127CEAFFC0EA07F0EA01F8EA007C7F7F80A26D7E
B3A96D7EA26D7E6D7E6D7E147FEC1FF8EC03FCEC1FF8EC7F0014FC495A495A495AA2495A
B3A9495AA291C7FC133E5B485AEA07F0EAFFC0007CC8FC1E577AC02B>I<14C0EB01E0A2
130314C0A213071480130F1400A25B131EA2133E133CA2137C137813F85BA212015BA212
035B12075BA2120F90C7FCA25A121EA2123E123C127C1278A212F85AA27E1278A2127C12
3C123E121EA2121F7EA27F1207A27F12037F1201A27F1200A27F1378137C133CA2133E13
1EA2131F7FA21480130714C01303A214E01301A2EB00C0135678C021>I<126012F0A27E
1278A2127C123C123E121EA2121F7EA27F1207A27F12037F1201A27F1200A27F1378137C
133CA2133E131EA2131F7FA21480130714C01303A214E01301A2130314C0A21307148013
0F1400A25B131EA2133E133CA2137C137813F85BA212015BA212035B12075BA2120F90C7
FCA25A121EA2123E123C127C1278A212F85AA2126013567BC021>I<126012F0B3B3B3B3
AD1260045776C018>I E /Fi 49 122 df<92260FFF80EB7FE04AB539F007FFFC020FDA
FC3F7F023F91B712809126FFFC0014C0010301C0030113C049D9000113FC49484B4813E0
49485B4A15F0495A4E6C13C0495A706E1380F27F00DC007F141C97C7FCAABBFCA526007F
F0C7D87FF0C8FCB3B2003FB5D8E03FB512F8A54B487EC745>11 D<923807FF804AB512F0
020F14FC023F809139FFFC00FF4901C0EB3F80010790C7487E4948EB01FF4948814A5B49
5AA2495AA4705B705B053EC7FC94C8FCA693383FFFF0B9FCA526007FF0C7FC177FB3B100
3FB5D8E03FB512E0A53B487EC742>I<EA07C0EA1FF0EA3FFC127F7F12FF7FA21480A37E
A27E7EEA07E7EA0007A2EB0F00A4131EA25BA25B13F85B1201485A485A485A48C7FC121E
120C1124788F21>44 D<B612FEAA1F0A7F9B28>I<903803FFF0013FEBFF8090B612E000
0315F83A0FFE007FFED81FE0EB0FFFD83F806D13807F486C6D13C07F00FF16E07FA46C5A
17C06C485B6C4815800007C75AC84813004B5A4B5AEDFFF016C04A5B4A48C7FC5D4A5A5D
4A5A5D4A5AA292C8FC5C143EAA143CA291C9FCA8147E14FF497F497F497F497FA66D5B6D
5B6D5B6D90C8FC147E2B487AC738>63 D<EE03E04C7EA24C7EA34C7EA24C7EA24C7EA393
B57EA24B80A34B8016EF03078016CF16C7030F801683031F801601033F80153E82037E80
037C7F03FC815D830201824B7F0203825D830207824B7F020F824B7F021F8292C7FC834A
B77EA24A82A302FCC86C7F4A810101845C840103844A810107844A81010F845C84011F84
91C97ED97FC083B66C0103B71280A551487CC75A>65 D<B912E018FEF0FFC019F085D800
1F902680000113FE716C7E727F727F84727F86A28486A862606260624E5B4E90C7FC4E5A
4D485A050713F092B712C04EC8FCF0FFC019F80380C713FE95381FFF80727F060313F086
84727F86A2737EA31B80A285A361A31B00A296B5FC62604E5B4E5B4E5B063F5B95B55ABB
5A4FC7FC19F819C006FCC8FC49477CC654>I<DC3FFE140E030FB500C0131E037F02F813
3E0203B600FE13FE020FEDFF81023FD9F80013C391B50080EB0FF74901FCC7EA03FF0107
01F0804901C0EC007F4949153F4990C9121F4948160F49481607485B484916031901485B
1900485B1A7E5A5C5A1A3EA25A91CBFC1A00A2B5FCAD7EA36E173E7EA37E806C197CA26C
7F1AF86C7F19016C6D17F06C6DEE03E06D6C16076D6CEE0FC06D6DED1F806D6DED3F006D
01F015FE010101FC4A5A6DD9FF80EB0FF8023F01F8EB7FF0020F90B612C0020393C7FCDA
007F14FC030F14E09226003FFEC8FC474979C756>I<B912C018FEF0FFC019F019FCD800
1F902680000713FFDD007F7F060F13E0727F06017F727F737E737E857313801BC0851BE0
851BF0A21BF885A21BFCA51BFE85AC611BFCA41BF8A34F13F0A34F13E0A24F13C01B8061
4F130062F1FFFC4E5B4E5B060F5B067F5B0507B5C7FCBA5A19F819C04EC8FC18C04F477C
C65B>I<BA12FEA485D8001F9038C00001EF001F180784180085A2851A80191FA3190FA2
173EA2F107C0A4057E90C7FCA317FE1601160F92B5FCA5EDC00F16011600177EA3053E14
7CA31AF8A394C8FC19011AF0A31903A219071AE0190F191F193F197F19FF060313C0180F
95B5FCBBFCA21A80A346467CC54E>I<DC3FFE140E030FB500C0131E037F02F8133E0203
B600FE13FE020FEDFF81023FD9F80013C391B50080EB0FF74901FCC7EA03FF010701F080
4901C0EC007F4949153F4990C9121F4948160F49481607485B484916031901485B190048
5B1A7E5A5C5A1A3EA25A91CBFC97C7FCA2B5FCAC057FB612FE7EA280A26C93C7EBFE00A3
7E807EA26C7FA26C7F807E6C7F6D7E6D7E6D7F6D01E05C6D6D5C010101FC5C6DD9FF8013
1F023F01FCEBFFC7020F90B612830203EDFE00DA007F02F8133E030F02E0130E9226003F
FEC9FC4F4979C75D>71 D<B7D8F801B712F0A5D8001F01C0C8003FEB8000B3A992B9FCA5
03C0C8123FB3ABB7D8F801B712F0A554477CC65D>I<B712F8A5D8001FEBC000B3B3B3A7
B712F8A525477CC62D>I<49B712E0A590C70007EBE000B3B3AAEA07E0487E487E487E48
7EB5FCA44B5BA2495D007F5C4992C7FC6C48495AD81FE0495A3A0FFE03FFF86CB612E000
0115806C6C49C8FC010713E033487EC63D>I<B8FCA5D8001F01C0C9FCB3B3A219F8A4F0
01F0A51803A31807A2F00FE0181FA2183F187F18FF1703170F177FBA12C0A53D477CC647
>76 D<B600E00503B6FC6F5FA26F5FA2D8001FF3F8006F171EA2DABFFE5FA2DA9FFF5FA2
028F6D5EA202876D4B5AA302836D4B5AA202816D4B5AA202806D4B5AA26F6C151EA36F6C
5DA26F6C5DA26F6D5CA26F6D495AA26F6D495AA36F6D495AA26F6D49C7FCA2706C131EA2
706C5BA2706C5BA3706D5AA270EBC1E0A270EBE3C0A270EBF780A37001FFC8FCA2715AA2
715AA2715AA2D97FE06E5AB600F00407B7FCA2715AA2715A68477CC671>I<B600C092B6
12F081818181D8001F9439007FE0006FEE1F8081828202BF7F149F82028F7F02877F0283
7F02817F1480836F7F6F7F6F7F6F7F81836F7F6F7F6F80707F8284707F707F707F707F70
7FA27014807113C07113E07113F07113F8A27113FC7113FE7113FF71149F7213DFA27213
FF84848484A28484858585A285858585D97FE082B612F01A7F1A3F1A1F74C7FC54477CC6
5D>I<923803FFF0037FEBFF800203B612F0020F15FC023F9038807FFF9127FFF8000713
C0010301E0010113F049496D7F4990C8EA3FFC49486F7E49486F7E017F8449486F7F4849
6F7F48854A8148854A814885A24849707EA24885A34890CA6C1380A5B519C0AE6C1A80A2
6E5EA26C1A00A36C6D4C5AA36C6D4B5BA26C616C6D4B5B6E5D6C616C6D4B5B6D6C4B5B6E
5D6D6D4A90C7FC010F6DECFFFC6D01F001035B6D01FC010F5B01009026FF807F13C06E90
B65A020F03FCC8FC020315F0DA007F1480030301F0C9FC4A4979C759>I<B97E18F818FF
19C019F0D8001F902680000F13FC05017F716C7E7213807213C0841AE0A27213F0A31AF8
A81AF0A34E13E0A21AC04E1380604E1300943801FFFC050F5B92B75A19C04EC7FC18F003
C0CAFCB3A9B712F8A545477CC651>I<B812FCEFFFF018FE727E19E0D8001F902680001F
13F805017F716CB4FC727F84727F86A2727FA286A862A24E5BA2624E5B4E90C8FCF0FFFE
050313F8051F5B92B712C04EC9FC18F818FE923A80007FFF80051F7F05077F717F717F85
717FA2187F85A786A51CE0F301F01AC0A2841B037201E013E0721407B700F06D01F013C0
729038FC1F807290B51200726C5B071F5BCD13F054487CC659>82
D<DA7FF013070107B55B011FECC01F017FECF03F90B6EAFC7F00039039C00FFEFF4848C7
B5FC49143F484880484814074980003F815B007F8183A200FF82A37F837F7F7F01FF92C7
FC6C13C014FEECFFE06C14FF16F06C15FC16FF6C16C06C82836C82C6826D81131F6D8113
01D9001F15801401DA000F14C01500161F7013E0828200788100F881A2177FA37E18C0A2
7E18806C16FF7F6D16006D4A5A01F8140301FE4A5A6D6C495A02FCEB7FF0D8FE3FB65AD8
FC0F1580D8F80392C7FC48C66C13F848010313C0334979C742>I<003FBBFCA5DA000390
38F8003FD87FF80507138001E01701498349187F90C7173FA2007E191FA21A0F127CA400
FC1AC0481907A5C894C7FCB3B3A40103B812F8A54A467CC553>I<B700F849B612C0A5D8
001F01C0C96CC7FC1A3EB3B3AA6D187E1A7C811AFC6D6019016D7F6D4D5A6F4B5A7F6E6C
ED1FC06E6C4B5A6E6C6C02FFC8FC6E01E0EB07FE020301FEEB7FFC6E90B612F06E6C5D03
0F1580030102FCC9FCDB000F13C052487CC65B>I<B700E0021FB512E0A5C66C0180C938
3FE0006D6DEE0F801A1F6D96C7FC6F5E6D183E811A7E6D6D167C1AFC6D6D5E19016D606F
15036D608119076E6D5D190F6E6D5D191F6E94C8FC705C6E163E82197E6E6D147C19FC6E
6D5C18016E5E7013036E5E8218076F01805B180F6F01C05B181F6F92C9FC715AA26FEBF0
3E187E6FEBF87C18FC6F5C17FD6F5C17FFA26F5CA2705BA2705BA27090CAFCA3705AA270
5AA2705AA2705A53487DC65A>I<B7D8C03FB600F0011FB512F0A5C66C90C8001F01E0C8
380FF80072EF03E06F7015076D65846F70150F6D70606F1A1F6D7293C7FC846F705D6D1C
3E814E6D157E6D1C7C6F7114FC6D4C5FA26F4A6E13016D059F5E6F19036E031F6E5C190F
707013076E033F5F70EB3E07067E6E130F6EDB7C035E70181F6E03FC6E91C8FC4E7EDCF0
016F5B6E4B6C153E16F86E02036F5B4E7F04FCEF80FC6E02075F4E7FDCFE0F16C16E4B6D
5C04FF17C36F011FEEE3E095C77E059F16F76F01BE6E5C17FE1CFF6F496E5CA26F96C9FC
4D80A26F496E5BA26F604D157FA26F604D153FA26F496F5AA2047F5F94C9120FA2043E70
5A74487DC67B>I<903807FFFC017FEBFFC048B612F84815FE3A07FE001FFF6D010313C0
486D6C7F6F7F167F83A26C90C76C7EA26C5AEA00F890C8FCA40207B5FC91B6FC1307013F
EBE03F9038FFFE00000313F04813C04890C7FC485A485A485AA2485AA5167F6C6C14FFED
01EF6C6C130301FF903807CFFF000F9026C03F8F13F86C90B5000713FC0001ECFC036C6C
EBF0010103903980007FF8362E7DAD3A>97 D<EB7FC0B5FCA512037EB3ED0FFC92387FFF
C002C3B512F002CF14FC9139DFF00FFF9126FF80037F4A486C7F02F86D7F4A6E7E4A6E7E
84171F84A2170F84A31980AA1900A34D5AA260A24D5A806E4A5A6E4A5A6E495B02BF0107
5B91271FE01FFEC7FC496CB55AD9FC0314F049C6148049D91FF8C8FC39487CC742>I<91
381FFFC091B512F8010714FE011FECFF8090267FFC0013C09038FFE00148494813E04813
80481300485AA248486D13C0123F6F1380EE3E00484891C7FCA312FFAA127FA27F123FA2
17F86C7E120F6DEC01F06C6D13036C6DEB07E06C6DEB0FC06C6DEB1F80D97FFEEBFF0001
1FB55A010714F8010014E0DA1FFEC7FC2D2E7CAD35>I<EF7FC093B5FCA5160382B3EC0F
FC91B51281010714E1011F14F990263FFC03B5FC9039FFF0007F4801C0131F48497F4890
C77E484880A2485AA2123FA2485AA312FFAA127FA3123F7FA2121F7F000F5D6C6C5C6C6D
5B6C6D5B6C6D90B57E90277FF807FBEBFF80011FB512F3010714C3010114039038001FF8
39487CC742>I<EC1FFE49B512E0010714F8011F14FE90397FFC07FF9026FFE001138048
9039C0007FC04849EB3FE04890C713F04848141F001FED0FF85B003F16FC1607127F5B17
FEA212FFA290B7FCA317FC01F8C9FCA4127FA27F123FA2171C6C6C153E120F6D157E6C16
FC6C6DEB01F86C6DEB03F026007FF0EB1FE0D93FFEEBFFC06DB612800107ECFE00010014
F8020F13802F2E7DAD36>I<EDFFC0020F13F8027F7F49B6FC4913814948481380EB0FF8
49484813C0133F14E0137F4A6C138013FF6F13006F5A163893C7FCAAB612FEA5C601E0C8
FCB3B2007FEBFFF0A52A487DC724>I<EF1F80DA7FF8EB7FE00103B53801FFF0011F14E7
499138FFE7F89026FFE01F130F4890388007FE4890380003FF48486DEB87F0A248486DEB
C1C0EFC000A2001F82A6000F5EA36C6C495BA26C6C4990C7FC6C6D485A6C9038E01FFC91
B512F0485DD803C391C8FC9038C07FF8000790CAFCA47F7F7F90B612F016FF6C16E017F8
6C16FE836C17807F0003B812C0120FD81FF8C7001F13E0D83FE0140148489138007FF017
3F4848151FA56C6CED3FE0A26C6CED7FC06D15FFD81FFC020313806CB4020F1300000301
F0EBFFFCC690B612F0013F15C001074AC7FCD9003F13C035447DAE3B>I<EB7FC0B5FCA5
12037EB3923801FFC0030F13F8033F13FE92B6FC9126C1FC077F9126C3E0037F9138C7C0
01DACF008002DE7F14DC02FC815C5CA35CB3A8B6D8C07FEBFFE0A53B487CC742>I<13FC
487E487E4813804813C04813E0A66C13C06C13806C13006C5A6C5A90C7FCABEB7FC0B5FC
A512037EB3B0B6FCA518497CC820>I<EB7FC0B5FCA512037EB393387FFFF8A5933807FE
0017F04C5AEE3FC04C5A04FEC7FC4B5AED07F84B5AED1FC04B5A03FFC8FCECC1FEECC3FF
02CF7F02DF7F91B5FC828202FC7F4A6C7EECE03F4A6C7E826F7F6F7F816F7F836F7F707E
163F707E707E188018C0B6D8807F13FFA538487CC73F>107 D<EB7FC0B5FCA512037EB3
B3B3A6B61280A519487CC720>I<90287FC001FFC0ECFFE0B5010F01F8010713FC033F01
FE011F13FF92B6017F809126C1FC07902680FE037F9126C3E0039026C1F0017F00039026
C7C0019038C3E0006CD9CF00DAE7808002DE6D01EFC7127F02DC15EE02FC03FE814A5D4A
5DA34A5DB3A8B6D8C07F9026FFE03FB512F0A55C2E7CAD63>I<903A7FC001FFC0B5010F
13F8033F13FE92B6FC9126C1FC077F9126C3E0037F00039038C7C0016CD9CF008002DE7F
14DC02FC815C5CA35CB3A8B6D8C07FEBFFE0A53B2E7CAD42>I<EC0FFF91B512F0010714
FE011F6E7E90263FFC037F903AFFE0007FF0480180EB1FF84890C76C7E48486E7E000F82
4980001F1780003F17C04980A2007F17E0A300FF17F0AA007F17E0A46C6C4A13C0A2001F
17806D5C000F17006C6C4A5A6C6D495A6C6D495A6C6D495A903A7FFC03FFE0011FB61280
01074AC7FC010014F0020F90C8FC342E7DAD3B>I<90397FC00FFCB590387FFFC002C3B5
12F002CF14FC9139DFF01FFF9126FF80077F000349486C7F6C01F801007F4A814A6E7E71
7EA284171FA284A2831980AA19005FA260A24D5AA24D5A806E4A5A6E495B6E495B6E010F
5B9226E03FFEC7FC02EFB55A02E314F002E01480DB1FF8C8FC92CAFCAFB612C0A539427C
AD42>I<DA0FFCEB03C091B513070107ECC00F011FECF01F90393FFE03F8903AFFF800FC
3F4801E0EB3E7F4849131F484914FF4890C77E82485A82485A82127FA25B12FFAA127F7F
A2123FA26D5C121F5E6C6C5C6C6D5B6C5D6C01E05B6C6D90B5FC90397FFC07FB011FB512
F3010714C3010114039038001FF891C7FCAF4BB61280A539427CAD3F>I<9039FF803F80
B5EBFFF0028313FC02877F91388FC3FF15070003D99E0F13806C13BC14B814F814F06F13
00A24A6C5AED00F893C7FCA25CB3A6B612E0A5292E7CAD31>I<D90FFF13E0017F13E348
B6FC1207380FF801391FC0003F4848130F90C712075A15035AA27F7F01F090C7FC13FEEB
FFF86CEBFFC015F06C14FC6C14FF6C15806C15C06C15E0C615F0133F010314F8EB001F02
0013FC151F0078140F00F8140715037EA26C15F8A27E6DEB07F06D130F01F0EB1FE001FC
EBFFC090B61280D8FC7FEBFE00D8F81F13F8D8E0031380262E7CAD2F>I<EB01F0A61303
A31307A3130FA2131F133FA2137FEA01FF5A000F90B512E0B7FCA4C601F0C7FCB3A516F8
A9017FEB01F014F8013FEB03E014FC90391FFE0FC06DB512800103140001005BEC1FF025
427EC12E>I<D97FE0EC3FF0B5EC7FFFA5000315016C81B3A85EA35E6C5DEE0F7F017F14
1F6E013E7FD93FFC01FCEBFFE06DB512F8010714E0010114809039003FFE003B2E7CAD42
>I<B649B5FCA5000301E09038001FC06C6DEC0F80171F6C17006E5C017F153E6E147E01
3F157C6E14FC011F5D6E13016D5DED80036D5D15C016076D5DEDE00F6D5DEDF01F6D92C7
FC6F5A027F133EEDFC7E023F137CEDFEFC021F5B15FFA26E5BA26E5BA26E5BA26E5BA26E
90C8FCA2157E153C382E7DAD3F>I<B60007B539E003FFFEA500039027C0001FFCC7EA3F
C06E010FED1F806C1A00836E01075D6C4B6C143E6E177E017F187C4C7F6E17FC013F4A6D
5B6E013E1401011F04E05B167E6ED97C7F13036D02FC01F05B922680F83F13076D04F85B
15819226C1F01F130F6D01C302FC5B9226E3E00F131F6D04FE90C7FC15E79226F7C0075B
6D01FFECFF3E4C6C137E6E5EA24C7E6E5E4B7F021F5EA24B147F020F5E4B143F02075EA2
6E486E5A6E486EC8FC4F2E7DAD56>I<007FB5D8800FB5FCA528007FF8000190C7FC6E14
FC6D6C495A6D6C495A6D5D6D6D485A6F485A6DEBE03F6D6D48C8FC6DEBF8FE91387FF9FC
6EB45A5E6E5B6E5B80806E7F82824A7F825C91380FEFFFDA1FCF7FDA3F877FDA7F037FEC
FE0149486C7F4A6D7E49488049486D7E010F6E7E49487F49486D7F01FF6E7FB500F8013F
EBFFC0A53A2E7EAD3F>I<007FB56C90B51280A5000101F0C7380FE0006C6D6E5A170F01
7F5E6E141F013F93C7FC6E5C011F153E6E147E6D157C6F13FC6D5DEDC0016D5D15E01603
6D5DEDF0076D5DEDF80F027F5CEDFC1F023F91C8FC6F5A021F133EEDFF7E6E137C16FCA2
6E5BA26E5BA26E5BA26E5BA26F5AA26FC9FCA3153E157E157C15FCD81F805B383FC001D8
7FE05B38FFF0035D14074A5A4A5A143F6C4848CAFCEB43FE383FFFF86C5B000713C0D801
FECBFC39427EAD3F>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 25 170 a Fi(Outline)p 0 321 1947 2 v 40 538 a
Fh(\017)21 b Fg(Concept)29 b(learning)40 683 y Fh(\017)21
b Fg(General-to-sp)r(eci\014c)31 b(ordering)e(o)n(v)n(er)f(h)n(yp)r
(otheses)40 829 y Fh(\017)21 b Fg(V)-7 b(ersion)29 b(spaces)g(and)f
(candidate)i(elimination)104 933 y(algorithm)40 1078
y Fh(\017)21 b Fg(Pic)n(king)30 b(new)f(examples)40 1223
y Fh(\017)21 b Fg(The)29 b(need)g(for)f(inductiv)n(e)j(bias)952
2748 y(1)p eop
%%Page: 2 2
2 1 bop 25 160 a Fi(T)-10 b(raining)41 b(Examples)f(for)h
Ff(Enjo)m(ySp)s(ort)p 0 321 1947 2 v 0 484 2202 2 v -1
588 2 104 v 73 557 a Fg(Sky)107 b(T)-7 b(emp)69 b(Humid)81
b(Wind)71 b(W)-7 b(ater)57 b(F)-7 b(orecst)57 b(Enjo)n(ySpt)p
2201 588 V 0 590 2202 2 v -1 693 2 104 v 25 662 a(Sunn)n(y)49
b(W)-7 b(arm)49 b(Normal)g(Strong)g(W)-7 b(arm)90 b(Same)198
b(Y)-7 b(es)p 2201 693 V -1 797 V 25 766 a(Sunn)n(y)49
b(W)-7 b(arm)99 b(High)i(Strong)49 b(W)-7 b(arm)90 b(Same)198
b(Y)-7 b(es)p 2201 797 V -1 901 V 31 870 a(Rain)n(y)85
b(Cold)127 b(High)101 b(Strong)49 b(W)-7 b(arm)49 b(Change)170
b(No)p 2201 901 V -1 1005 V 25 974 a(Sunn)n(y)49 b(W)-7
b(arm)99 b(High)i(Strong)77 b(Co)r(ol)i(Change)159 b(Y)-7
b(es)p 2201 1005 V 0 1006 2202 2 v 423 1170 a(What)30
b(is)f(the)g(general)h(concept?)952 2748 y(2)p eop
%%Page: 3 3
3 2 bop 25 160 a Fi(Represen)m(ting)42 b(Hyp)s(otheses)p
0 321 1947 2 v 0 538 a Fg(Man)n(y)29 b(p)r(ossible)h(represen)n
(tations)0 692 y(Here,)e Fe(h)h Fg(is)g(conjunction)i(of)e(constrain)n
(ts)h(on)e(attributes)0 845 y(Eac)n(h)g(constrain)n(t)i(can)f(b)r(e)40
991 y Fh(\017)21 b Fg(a)29 b(sp)r(ec\014c)g(v)-5 b(alue)30
b(\(e.g.,)g Fe(W)12 b(ater)27 b Fg(=)d Fe(W)12 b(ar)r(m)p
Fg(\))40 1136 y Fh(\017)21 b Fg(don't)29 b(care)g(\(e.g.,)g(\\)p
Fe(W)12 b(ater)27 b Fg(=?"\))40 1281 y Fh(\017)21 b Fg(no)28
b(v)-5 b(alue)31 b(allo)n(w)n(ed)f(\(e.g.,\\W)-7 b(ater=)p
Fh(;)p Fg("\))0 1427 y(F)g(or)28 b(example,)100 1520
y(Sky)126 b(AirT)-7 b(emp)49 b(Humid)78 b(Wind)j(W)-7
b(ater)51 b(F)-7 b(orecst)25 1624 y Fh(h)p Fe(S)5 b(unny)200
b Fg(?)304 b(?)157 b Fe(S)5 b(tr)r(ong)147 b Fg(?)153
b Fe(S)5 b(ame)p Fh(i)952 2748 y Fg(3)p eop
%%Page: 4 4
4 3 bop 25 160 a Fi(Protot)m(ypical)42 b(Concept)e(Learning)h(T)-10
b(ask)p 0 321 1947 2 v 40 538 a Fh(\017)21 b Fd(Giv)m(en:)125
683 y({)g Fg(Instances)30 b Fe(X)7 b Fg(:)38 b(P)n(ossible)30
b Fe(D)r(ay)s Fg(s,)g(eac)n(h)e(describ)r(ed)195 787
y(b)n(y)h(the)g(attributes)i Fc(Sky,)g(A)n(irT)-7 b(emp,)31
b(Humidity,)195 891 y(Wind,)h(Water,)f(F)-7 b(or)l(e)l(c)l(ast)125
1016 y Fd({)21 b Fg(T)-7 b(arget)29 b(function)i Fe(c)p
Fg(:)195 1119 y Fe(E)5 b(nj)g(oy)s(S)g(por)r(t)24 b Fg(:)g
Fe(D)r(ay)k Fh(!)c(f)p Fe(y)s(es;)15 b(no)p Fh(g)125
1244 y Fd({)21 b Fg(Hyp)r(otheses)30 b Fe(H)7 b Fg(:)38
b(Conjunctions)30 b(of)f(literals.)41 b(E.g.)657 1397
y Fh(h)p Fg(?)p Fe(;)14 b(C)6 b(ol)r(d;)13 b(H)7 b(ig)s(h;)13
b Fg(?)p Fe(;)h Fg(?)p Fe(;)g Fg(?)p Fh(i)p Fe(:)125
1561 y Fd({)21 b Fg(T)-7 b(raining)30 b(examples)f Fe(D)r
Fg(:)39 b(P)n(ositiv)n(e)31 b(and)d(negativ)n(e)195 1665
y(examples)h(of)g(the)h(target)f(function)40 1811 y Fh(\017)21
b Fd(Determine:)952 2748 y Fg(4)p eop
%%Page: 5 5
5 4 bop 21 882 a Fd(The)33 b(inductiv)m(e)i(learning)g(h)m(yp)s
(othesis:)41 b Fg(An)n(y)104 986 y(h)n(yp)r(othesis)30
b(found)f(to)g(appro)n(ximate)f(the)i(target)104 1090
y(function)g(w)n(ell)h(o)n(v)n(er)d(a)h(su\016cien)n(tly)i(large)e(set)
h(of)104 1194 y(training)g(examples)f(will)j(also)e(appro)n(ximate)e
(the)104 1297 y(target)i(function)g(w)n(ell)g(o)n(v)n(er)f(other)g
(unobserv)n(ed)104 1401 y(examples.)952 2748 y(5)p eop
%%Page: 6 6
6 5 bop 25 155 a Fi(Instance,)101 b(Hyp)s(otheses,)i(and)89
b(More-)25 279 y(General-Than)p 0 414 1947 2 v 29 571
a
 33154007 20223940 1841889 32167280 29404446 49073192 startTexFig
 29 571 a
%%BeginDocument: ./bookps/vs-gen-spec.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 53 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Roman reencodeISO def
/Courier reencodeISO def
/Times-Italic reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8.37293e-40 4.45893e-40 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -1 -1 ] concat
%I
71 698 250 898 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 248 -1 ] concat
%I
71 698 250 898 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -0.233251 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 339 667 ] concat
%I
[
(h  = <Sunny, ?, ?, Strong, ? ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 345.375 658.688 ] concat
%I
[
(1)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -0.000145316 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 339 648 ] concat
%I
[
(h  = <Sunny, ?, ?, ?, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 345.562 640.125 ] concat
%I
[
(2)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 339 628 ] concat
%I
[
(h  = <Sunny, ?, ?, ?, Cool, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 345.312 620 ] concat
%I
[
(3)
] Text
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -94.4893 157.997 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -36.4908 96.003 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -93.459 100.018 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 251.505 134.003 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 224.508 102.004 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 174.507 102.999 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -92.4672 34.0288 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 2.50075 95.0092 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 19.4974 64.0236 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -31.4808 157.992 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -12.4967 33.0292 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 166.44 40.0295 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -53.4757 52.0281 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 172.444 163.99 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 193.439 72.0266 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 274.412 103.018 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 29.5055 161.999 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 251.427 72.0355 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.12166 -0 -0 1.09006 -5.22615 306.066 ] concat
%I
129 460 19 36 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.912706 -0 -0 0.841794 57.1093 411.164 ] concat
%I
127 457 45 18 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 72.973 271.9 ] concat
%I
98 523 62 80 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 222.423 40.0325 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 278.405 38.0361 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 143.458 76.025 ] concat
%I
189 703 3 3 Elli
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 15.9941 339.874 ] concat
%I
350 463 368 434 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 15.9941 339.874 ] concat
%I
398 465 367 436 Line
%I 1
End

Begin %I Pict
%I b 65535
0 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 235.913 -187.931 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 164.053 958.996 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 157 967 ] concat
%I
[
(h)
] Text
End

End %I eop

Begin %I Pict
%I b 65535
0 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 118.956 -135.95 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 257 938 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 249.975 946.006 ] concat
%I
[
(h)
] Text
End

End %I eop

Begin %I Pict
%I b 65535
0 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 135.95 -135.949 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 293 939 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 285.958 947.002 ] concat
%I
[
(h)
] Text
End

End %I eop

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 15.9941 339.874 ] concat
%I
399 465 425 434 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 126 930.003 ] concat
%I
[
(Instances X)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 368 929.003 ] concat
%I
[
(Hypotheses H)
] Text
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 -2.99892 310.885 ] concat
%I
513 570 513 407 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 518 870.002 ] concat
%I
[
(Specific)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 518 746.002 ] concat
%I
[
(General)
] Text
End

Begin %I BSpl
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.08822 -0 -0 0.651933 -14.949 502.243 ] concat
%I 3
349 465
255 452
211 452
3 BSpl
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -14.493 64.0207 ] concat
%I
189 703 3 3 Elli
End

Begin %I BSpl
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 15.9941 339.874 ] concat
%I 3
368 436
346 420
212 419
3 BSpl
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -42.9841 -167.938 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 190.698 960.142 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 185 968 ] concat
%I
[
(x)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -59.9778 -207.923 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 260.955 968.996 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 255 978 ] concat
%I
[
(x)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 42.75 659.25 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 37.0103 665.972 ] concat
%I
[
(x  = <Sunny, Warm, High, Strong, Cool, Same>)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -0.500361 -1.99927 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 42.875 640.938 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 37.0107 647.974 ] concat
%I
[
(x  = <Sunny, Warm, High, Light, Warm, Same>)
] Text
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -52.4731 116.007 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 230.491 163.998 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 200.505 132.013 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 285.477 160.005 ] concat
%I
189 703 3 3 Elli
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
228 284 251 313 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 184.932 459.83 ] concat
%I
221 287 199 312 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
173 287 194 311 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
279 284 256 312 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
258 379 285 402 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
252 381 235 405 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
206 379 231 406 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
178 351 200 373 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
229 349 251 374 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
201 377 178 404 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
166 288 148 316 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
150 321 174 344 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
227 349 206 372 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 30.9886 458.831 ] concat
%I
431 352 413 375 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 31.9882 458.831 ] concat
%I
412 319 432 344 Line
%I 1
End

Begin %I BSpl
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 31.9882 459.83 ] concat
%I 4
380 346
321 370
206 373
129 363
4 BSpl
%I 1
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 952 2748 a Fg(6)p eop
%%Page: 7 7
7 6 bop 25 160 a Ff(Find-S)42 b Fi(Algorithm)p 0 321
1947 2 v 16 538 a Fg(1.)21 b(Initiali)q(ze)32 b Fe(h)c
Fg(to)i(the)f(most)f(sp)r(eci\014c)i(h)n(yp)r(othesis)h(in)e
Fe(H)16 683 y Fg(2.)21 b(F)-7 b(or)28 b(eac)n(h)h(p)r(ositiv)n(e)j
(training)e(instance)g Fe(x)131 829 y Fh(\017)21 b Fg(F)-7
b(or)29 b(eac)n(h)f(attribute)j(constrain)n(t)f Fe(a)1357
842 y Fb(i)1409 829 y Fg(in)f Fe(h)273 953 y Fg(If)g(the)g(constrain)n
(t)h Fe(a)957 966 y Fb(i)1009 953 y Fg(in)f Fe(h)g Fg(is)g(satis\014ed)
h(b)n(y)f Fe(x)273 1067 y Fg(Then)g(do)f(nothing)273
1182 y(Else)h(replace)h Fe(a)793 1195 y Fb(i)845 1182
y Fg(in)f Fe(h)g Fg(b)n(y)f(the)i(next)f(more)273 1285
y(general)h(constrain)n(t)f(that)h(is)g(satis\014ed)f(b)n(y)g
Fe(x)16 1431 y Fg(3.)21 b(output)29 b(h)n(yp)r(othesis)h
Fe(h)952 2748 y Fg(7)p eop
%%Page: 8 8
8 7 bop 25 160 a Fi(Hyp)s(othesis)41 b(Space)f(Searc)m(h)f(b)m(y)g
Ff(Find-S)p 0 321 1947 2 v 29 478 a
 37890293 23113076 1447198 31772590 29404446 49073192 startTexFig
 29 478 a
%%BeginDocument: ./bookps/finds-gen-spec.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 54 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Italic reencodeISO def
/Times-Roman reencodeISO def
/Courier reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8.37293e-40 4.45893e-40 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -1 -1 ] concat
%I
71 698 250 898 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 248 -1 ] concat
%I
71 698 250 898 Rect
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -94.4893 157.997 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -61.4708 119.011 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 251.505 134.003 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 224.508 102.004 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 174.507 102.999 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -92.4672 34.0288 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -31.4808 157.992 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -33.4889 51.0225 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 168.439 42.0288 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 23.4959 37.0336 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 193.439 72.0266 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 274.412 103.018 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 29.5055 161.999 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 251.427 72.0355 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 222.423 40.0325 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 278.405 38.0361 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 143.458 76.025 ] concat
%I
189 703 3 3 Elli
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 15.9941 339.874 ] concat
%I
350 463 368 434 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 15.9941 339.874 ] concat
%I
398 465 367 436 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 15.9941 339.874 ] concat
%I
399 465 425 434 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 126 930.003 ] concat
%I
[
(Instances X)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 368 929.003 ] concat
%I
[
(Hypotheses H)
] Text
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 -2.99892 310.885 ] concat
%I
513 570 513 407 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 518 870.002 ] concat
%I
[
(Specific)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 518 746.002 ] concat
%I
[
(General)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -78.4694 67.0196 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -1.49191 144.996 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 230.491 163.998 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 200.505 132.013 ] concat
%I
189 703 3 3 Elli
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
228 284 251 313 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 184.932 459.83 ] concat
%I
221 287 199 312 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
173 287 194 311 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
279 284 256 312 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
252 381 235 405 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
206 379 231 406 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
178 351 200 373 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
229 349 251 374 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
150 321 174 344 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 186.931 458.831 ] concat
%I
227 349 206 372 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 30.9886 458.831 ] concat
%I
431 352 413 375 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 31.9882 458.831 ] concat
%I
412 319 432 344 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 196.438 10.0493 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 252.421 6.0538 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 301.405 69.0335 ] concat
%I
189 703 3 3 Elli
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 11.9956 153.943 ] concat
%I
458 590 476 615 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 11.9956 153.943 ] concat
%I
478 620 455 650 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -39.9852 -169.937 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 190.698 960.142 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 185 968 ] concat
%I
[
(x)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -61.9771 -180.933 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 260.955 968.996 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 255 978 ] concat
%I
[
(x)
] Text
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 23.4913 188.43 ] concat
%I
132 604 16 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 -16.9937 190.929 ] concat
%I
196 603 44 29 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -96.4549 105.019 ] concat
%I
189 703 3 3 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -13.9949 120.955 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 126 740 ] concat
%I
[
(x)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 132.011 733.996 ] concat
%I
[
(3)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 7.99704 3.99854 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 162.999 736.002 ] concat
%I
[
(x)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 169.002 727.999 ] concat
%I
[
(4)
] Text
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 -6.99742 164.939 ] concat
%I
185 605 59 69 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -6.99738 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 428 885 ] concat
%I
[
(h)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 435.948 879.031 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -4.99817 -0.999634 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 451 852 ] concat
%I
[
(h)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 458.944 847.039 ] concat
%I
[
(1)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 422.005 811.03 ] concat
%I
[
(h)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 429.935 805.061 ] concat
%I
[
(2,3)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 28.9893 -204.924 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 444.9 949.002 ] concat
%I
[
(h)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 452.944 943.008 ] concat
%I
[
(4)
] Text
End

End %I eop

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 -6.99742 164.939 ] concat
%I
396 549 417 574 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 -6.99742 164.939 ] concat
%I
452 547 472 573 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 -6.99742 164.939 ] concat
%I
447 547 422 575 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 -6.99742 164.939 ] concat
%I
390 551 368 577 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 -0 -0 0.999631 -6.99742 164.939 ] concat
%I
362 583 342 610 Line
%I 1
End

Begin %I BSpl
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 -6.99742 164.939 ] concat
%I 4
418 641
336 652
248 650
225 644
4 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 -6.99742 164.939 ] concat
%I 5
446 673
367 705
287 701
212 677
174 636
5 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 -0 -0 0.999631 -6.99742 164.939 ] concat
%I 4
472 576
411 550
275 561
241 577
4 BSpl
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -10.9959 80.97 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -0.0147653 -3.21562 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 40 598 ] concat
%I
[
(x  = <Sunny Warm Normal Strong Warm Same>, +)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 47.0052 592.971 ] concat
%I
[
(1)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -0.0147672 0.790283 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 40 578 ] concat
%I
[
(x  = <Sunny Warm High  Strong Warm Same>, +)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 46.0133 571.973 ] concat
%I
[
(2)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -3.01477 4.79616 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 43 558 ] concat
%I
[
(x  = <Rainy Cold High Strong Warm Change>, -)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 49.0317 552.979 ] concat
%I
[
(3)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -4.01477 7.80211 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 44 539 ] concat
%I
[
(x  = <Sunny Warm High Strong Cool Change>, +)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 50.048 532.99 ] concat
%I
[
(4)
] Text
End

End %I eop

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 307.877 679.712 ] concat
%I
[
(0)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 95.8871 106.773 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 206.001 560.985 ] concat
%I
[
(h  = <Sunny Warm Normal Strong Warm Same>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 211.999 554.972 ] concat
%I
[
(1)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 92.8885 108.763 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 209 543 ] concat
%I
[
(h  = <Sunny Warm  ?  Strong Warm Same>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 215.012 538.976 ] concat
%I
[
(2)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 82.8922 120.768 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 218.996 499.007 ] concat
%I
[
(h  = <Sunny Warm  ?  Strong  ?  ? >)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 225.034 493.994 ] concat
%I
[
(4)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 87.8874 115.786 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
Courier 10 SetF
%I t
[ 1 0 0 1 220.023 515.984 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 214.001 520.011 ] concat
%I
[
(h  = <Sunny Warm  ?  Strong Warm Same>)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -153.943 254.906 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 310.717 543.271 ] concat
%I
[
(+)
] Text
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249908 -0 -0 0.249908 265.985 388.576 ] concat
%I
192 601 17 16 Elli
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -228.915 318.882 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 348 550 ] concat
%I
[
(-)
] Text
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249908 -0 -0 0.249908 303.474 395.077 ] concat
%I
192 601 17 16 Elli
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -108.957 257.908 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 310.717 543.271 ] concat
%I
[
(+)
] Text
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249908 -0 -0 0.249908 265.985 388.576 ] concat
%I
192 601 17 16 Elli
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -130.946 201.931 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 310.717 543.271 ] concat
%I
[
(+)
] Text
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.249908 -0 -0 0.249908 265.985 388.576 ] concat
%I
192 601 17 16 Elli
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 302 683.958 ] concat
%I
[
(h  = <\330 \330 \330 \330 \330 \330>)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 952 2748 a Fg(8)p eop
%%Page: 9 9
9 8 bop 25 160 a Fi(Complain)m(ts)41 b(ab)s(out)f Ff(Find-S)p
0 321 1947 2 v 40 538 a Fh(\017)21 b Fg(Can't)29 b(tell)i(whether)e(it)
i(has)d(learned)i(concept)40 683 y Fh(\017)21 b Fg(Can't)29
b(tell)i(when)e(training)h(data)g(inconsisten)n(t)40
829 y Fh(\017)21 b Fg(Pic)n(ks)29 b(a)g(maximally)h(sp)r(eci\014c)g
Fe(h)f Fg(\(wh)n(y?\))40 974 y Fh(\017)21 b Fg(Dep)r(ending)29
b(on)g Fe(H)7 b Fg(,)28 b(there)h(migh)n(t)g(b)r(e)g(sev)n(eral!)952
2748 y(9)p eop
%%Page: 10 10
10 9 bop 25 160 a Fi(V)-10 b(ersion)41 b(Spaces)p 0 321
1947 2 v 104 538 a Fg(A)28 b(h)n(yp)r(othesis)i Fe(h)f
Fg(is)g Fd(consisten)m(t)j Fg(with)e(a)e(set)i(of)104
642 y(training)f(examples)f Fe(D)i Fg(if)f(and)e(only)i(if)g
Fe(h)p Fg(\()p Fe(x)p Fg(\))c(=)f Fe(c)p Fg(\()p Fe(x)p
Fg(\))104 746 y(for)29 b(eac)n(h)f(example)h Fh(h)p Fe(x;)15
b(c)p Fg(\()p Fe(x)p Fg(\))p Fh(i)31 b Fg(in)e Fe(D)r
Fg(.)104 899 y Fe(C)6 b(onsistent)p Fg(\()p Fe(h;)14
b(D)r Fg(\))25 b Fh(\021)e Fg(\()p Fh(8h)p Fe(x;)15 b(c)p
Fg(\()p Fe(x)p Fg(\))p Fh(i)26 b(2)e Fe(D)r Fg(\))c Fe(h)p
Fg(\()p Fe(x)p Fg(\))25 b(=)f Fe(c)p Fg(\()p Fe(x)p Fg(\))104
1227 y(The)29 b Fd(v)m(ersion)34 b(space)p Fg(,)c Fe(V)19
b(S)1027 1240 y Fb(H)r(;D)1148 1227 y Fg(,)28 b(with)j(resp)r(ect)e(to)
104 1331 y(h)n(yp)r(othesis)h(space)f Fe(H)35 b Fg(and)29
b(training)h(examples)f Fe(D)r Fg(,)104 1435 y(is)g(the)h(subset)f(of)g
(h)n(yp)r(otheses)g(from)f Fe(H)35 b Fg(consisten)n(t)104
1539 y(with)30 b(the)f(training)i(examples)e(in)g Fe(D)r
Fg(.)296 1692 y Fe(V)19 b(S)418 1705 y Fb(H)r(;D)563
1692 y Fh(\021)24 b(f)p Fe(h)f Fh(2)i Fe(H)7 b Fh(j)p
Fe(C)f(onsistent)p Fg(\()p Fe(h;)13 b(D)r Fg(\))p Fh(g)930
2748 y Fg(10)p eop
%%Page: 11 11
11 10 bop 25 160 a Fi(Represen)m(ting)42 b(V)-10 b(ersion)41
b(Spaces)p 0 321 1947 2 v 21 538 a Fg(The)29 b Fd(General)34
b(b)s(oundary)p Fg(,)29 b(G,)f(of)h(v)n(ersion)g(space)104
642 y Fe(V)19 b(S)226 655 y Fb(H)r(;D)376 642 y Fg(is)29
b(the)h(set)f(of)g(its)h(maximally)g(general)104 746
y(mem)n(b)r(ers)21 941 y(The)f Fd(Sp)s(eci\014c)k(b)s(oundary)p
Fg(,)c(S,)g(of)g(v)n(ersion)g(space)104 1045 y Fe(V)19
b(S)226 1058 y Fb(H)r(;D)376 1045 y Fg(is)29 b(the)h(set)f(of)g(its)h
(maximally)g(sp)r(eci\014c)104 1148 y(mem)n(b)r(ers)21
1344 y(Ev)n(ery)f(mem)n(b)r(er)d(of)j(the)g(v)n(ersion)h(space)f(lies)h
(b)r(et)n(w)n(een)104 1447 y(these)f(b)r(oundaries)134
1601 y Fe(V)20 b(S)257 1614 y Fb(H)r(;D)401 1601 y Fg(=)k
Fh(f)p Fe(h)g Fh(2)g Fe(H)7 b Fh(j)p Fg(\()p Fh(9)p Fe(s)24
b Fh(2)h Fe(S)5 b Fg(\)\()p Fh(9)p Fe(g)27 b Fh(2)d Fe(G)p
Fg(\)\()p Fe(g)k Fh(\025)c Fe(h)g Fh(\025)f Fe(s)p Fg(\))p
Fh(g)104 1754 y Fg(where)29 b Fe(x)24 b Fh(\025)g Fe(y)32
b Fg(means)27 b Fe(x)i Fg(is)h(more)d(general)j(or)e(equal)j(to)104
1858 y Fe(y)930 2748 y Fg(11)p eop
%%Page: 12 12
12 11 bop 25 160 a Fi(Example)40 b(V)-10 b(ersion)41
b(Space)p 0 321 1947 2 v 0 478 a
 33154007 13924680 7762247 24536596 34009169 35653713 startTexFig
 0 478 a
%%BeginDocument: ./bookps/figure-vs3.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 249 668 ] concat
%I
[
(S:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 329 578 ] concat
%I
[
(<Sunny, Warm, ?, ?, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 149 578 ] concat
%I
[
(<Sunny, ?, ?, Strong, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 498 578 ] concat
%I
[
(<?, Warm, ?, Strong, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 219 488 ] concat
%I
[
(G:)
] Text
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
231 441 231 391 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.931035 0 0 1 175.758 197 ] concat
%I
231 441 400 391 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.917241 0 0 1 155.325 197 ] concat
%I
231 441 91 391 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
91 361 151 311 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 249 488 ] concat
%I
[
({<Sunny, ?, ?, ?, ?, ?>,    <?, Warm, ?, ?, ?, ?>})
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 148 187 ] concat
%I
91 281 390 311 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.913043 0 0 1 149.391 207 ] concat
%I
131 441 360 470 Rect
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
231 361 161 311 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
251 361 320 311 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
400 361 330 311 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 279 667 ] concat
%I
[
({<Sunny, Warm, ?, Strong, ?, ?>})
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 930 2748 a Fg(12)p eop
%%Page: 13 13
13 12 bop 25 155 a Fi(V)-10 b(ersion)81 b(Space)f(Candidate)h(Elimina-)
25 279 y(tion)41 b(Algorithm)p 0 434 1947 2 v 0 651 a
Fg(Initiali)q(ze)32 b Fe(G)d Fg(to)g(the)g(set)h(of)f(maximally)h
(general)0 755 y(h)n(yp)r(otheses)g(in)f Fe(H)0 858 y
Fg(Initiali)q(ze)j Fe(S)i Fg(to)29 b(the)g(set)h(of)f(maximally)h(sp)r
(eci\014c)0 962 y(h)n(yp)r(otheses)g(in)f Fe(H)0 1066
y Fg(F)-7 b(or)28 b(eac)n(h)h(training)i(example)e Fe(d)p
Fg(,)f(do)40 1211 y Fh(\017)21 b Fg(If)29 b Fe(d)f Fg(is)i(a)f(p)r
(ositiv)n(e)i(example)125 1356 y Fd({)21 b Fg(Remo)n(v)n(e)28
b(from)g Fe(G)g Fg(an)n(y)h(h)n(yp)r(othesis)h(inconsisten)n(t)195
1460 y(with)g Fe(d)125 1585 y Fd({)21 b Fg(F)-7 b(or)29
b(eac)n(h)f(h)n(yp)r(othesis)j Fe(s)e Fg(in)g Fe(S)34
b Fg(that)29 b(is)h(not)195 1689 y(consisten)n(t)g(with)h
Fe(d)209 1813 y Fh(\003)21 b Fg(Remo)n(v)n(e)28 b Fe(s)h
Fg(from)e Fe(S)209 1927 y Fh(\003)21 b Fg(Add)28 b(to)h
Fe(S)k Fg(all)e(minimal)e(generalizations)j Fe(h)c Fg(of)h
Fe(s)273 2031 y Fg(suc)n(h)f(that)256 2145 y(1.)20 b
Fe(h)29 b Fg(is)g(consisten)n(t)i(with)f Fe(d)p Fg(,)e(and)256
2259 y(2.)20 b(some)28 b(mem)n(b)r(er)e(of)j Fe(G)g Fg(is)g(more)f
(general)i(than)e Fe(h)930 2748 y Fg(13)p eop
%%Page: 14 14
14 13 bop 209 143 a Fh(\003)21 b Fg(Remo)n(v)n(e)28 b(from)f
Fe(S)34 b Fg(an)n(y)28 b(h)n(yp)r(othesis)j(that)e(is)h(more)273
247 y(general)g(than)e(another)h(h)n(yp)r(othesis)i(in)e
Fe(S)40 392 y Fh(\017)21 b Fg(If)29 b Fe(d)f Fg(is)i(a)f(negativ)n(e)h
(example)125 537 y Fd({)21 b Fg(Remo)n(v)n(e)28 b(from)g
Fe(S)33 b Fg(an)n(y)c(h)n(yp)r(othesis)h(inconsisten)n(t)195
641 y(with)g Fe(d)125 765 y Fd({)21 b Fg(F)-7 b(or)29
b(eac)n(h)f(h)n(yp)r(othesis)j Fe(g)g Fg(in)f Fe(G)e
Fg(that)i(is)f(not)195 869 y(consisten)n(t)h(with)h Fe(d)209
994 y Fh(\003)21 b Fg(Remo)n(v)n(e)28 b Fe(g)k Fg(from)27
b Fe(G)209 1108 y Fh(\003)21 b Fg(Add)28 b(to)h Fe(G)f
Fg(all)j(minimal)e(sp)r(ecializat)q(i)q(ons)i Fe(h)e
Fg(of)g Fe(g)273 1212 y Fg(suc)n(h)f(that)256 1326 y(1.)20
b Fe(h)29 b Fg(is)g(consisten)n(t)i(with)f Fe(d)p Fg(,)e(and)256
1440 y(2.)20 b(some)28 b(mem)n(b)r(er)e(of)j Fe(S)34
b Fg(is)29 b(more)f(sp)r(eci\014c)i(than)f Fe(h)209 1554
y Fh(\003)21 b Fg(Remo)n(v)n(e)28 b(from)f Fe(G)i Fg(an)n(y)f(h)n(yp)r
(othesis)j(that)e(is)h(less)273 1658 y(general)g(than)e(another)h(h)n
(yp)r(othesis)i(in)e Fe(G)930 2748 y Fg(14)p eop
%%Page: 15 15
15 14 bop 25 160 a Fi(Example)40 b(T)-10 b(race)p 0 321
1947 2 v 29 478 a
 33154007 29175520 11182899 26049576 28088811 41047818 startTexFig
 29 478 a
%%BeginDocument: ./bookps/vsexamp-initialize.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 41.003 -0.999634 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 279 518 ] concat
%I
[
({<?, ?, ?, ?, ?, ?>})
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 148 197 ] concat
%I
121 301 251 331 Rect
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 143.004 228.991 ] concat
%I
101 520 390 550 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -3.00535 -39.5408 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 219 810.029 ] concat
%I
[
(S)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 230.008 801.031 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 237.014 810.035 ] concat
%I
[
(:)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 316.003 770.024 ] concat
%I
[
({<\330, \330, \330, \330, \330, \330>})
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 1.01246 -1.99927 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 213.982 523.494 ] concat
%I
[
(G)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 226.99 516.502 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 233.997 527.039 ] concat
%I
[
(:)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 930 2748 a Fg(15)p eop
%%Page: 16 16
16 15 bop 25 160 a Fi(What)39 b(Next)h(T)-10 b(raining)41
b(Example?)p 0 321 1947 2 v 0 478 a
 33154007 13924680 7762247 24536596 34009169 35653713 startTexFig
 0 478 a
%%BeginDocument: ./bookps/figure-vs3.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 249 668 ] concat
%I
[
(S:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 329 578 ] concat
%I
[
(<Sunny, Warm, ?, ?, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 149 578 ] concat
%I
[
(<Sunny, ?, ?, Strong, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 498 578 ] concat
%I
[
(<?, Warm, ?, Strong, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 219 488 ] concat
%I
[
(G:)
] Text
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
231 441 231 391 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.931035 0 0 1 175.758 197 ] concat
%I
231 441 400 391 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.917241 0 0 1 155.325 197 ] concat
%I
231 441 91 391 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
91 361 151 311 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 249 488 ] concat
%I
[
({<Sunny, ?, ?, ?, ?, ?>,    <?, Warm, ?, ?, ?, ?>})
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 148 187 ] concat
%I
91 281 390 311 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.913043 0 0 1 149.391 207 ] concat
%I
131 441 360 470 Rect
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
231 361 161 311 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
251 361 320 311 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
400 361 330 311 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 279 667 ] concat
%I
[
({<Sunny, Warm, ?, Strong, ?, ?>})
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 930 2748 a Fg(16)p eop
%%Page: 17 17
17 16 bop 25 170 a Fi(Ho)m(w)39 b(Should)i(These)f(Be)h(Classi\014ed?)p
0 321 1947 2 v 0 478 a
 33154007 13924680 7762247 24536596 34009169 35653713 startTexFig
 0 478 a
%%BeginDocument: ./bookps/figure-vs3.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 249 668 ] concat
%I
[
(S:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 329 578 ] concat
%I
[
(<Sunny, Warm, ?, ?, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 149 578 ] concat
%I
[
(<Sunny, ?, ?, Strong, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 498 578 ] concat
%I
[
(<?, Warm, ?, Strong, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 219 488 ] concat
%I
[
(G:)
] Text
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
231 441 231 391 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.931035 0 0 1 175.758 197 ] concat
%I
231 441 400 391 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.917241 0 0 1 155.325 197 ] concat
%I
231 441 91 391 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
91 361 151 311 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 249 488 ] concat
%I
[
({<Sunny, ?, ?, ?, ?, ?>,    <?, Warm, ?, ?, ?, ?>})
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 148 187 ] concat
%I
91 281 390 311 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.913043 0 0 1 149.391 207 ] concat
%I
131 441 360 470 Rect
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
231 361 161 311 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
251 361 320 311 Line
%I 1
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 197 ] concat
%I
400 361 330 311 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 279 667 ] concat
%I
[
({<Sunny, Warm, ?, Strong, ?, ?>})
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 137 1618 a Fh(h)p Fe(S)5 b(unny)32 b(W)12 b(ar)r(m)29
b(N)9 b(or)r(mal)31 b(S)5 b(tr)r(ong)31 b(C)6 b(ool)29
b(C)6 b(hang)s(e)p Fh(i)213 1863 y(h)p Fe(R)q(ainy)32
b(C)6 b(ool)30 b(N)9 b(or)r(mal)30 b(Lig)s(ht)e(W)12
b(ar)r(m)29 b(S)5 b(ame)p Fh(i)166 2109 y(h)p Fe(S)g(unny)31
b(W)12 b(ar)r(m)30 b(N)9 b(or)r(mal)31 b(Lig)s(ht)c(W)12
b(ar)r(m)30 b(S)5 b(ame)p Fh(i)930 2748 y Fg(17)p eop
%%Page: 18 18
18 17 bop 25 160 a Fi(What)39 b(Justi\014es)i(this)g(Inductiv)m(e)f
(Leap?)p 0 321 1947 2 v 23 628 a Fg(+)57 b Fh(h)p Fe(S)5
b(unny)32 b(W)12 b(ar)r(m)29 b(N)9 b(or)r(mal)31 b(S)5
b(tr)r(ong)32 b(C)6 b(ool)29 b(C)6 b(hang)s(e)p Fh(i)52
781 y Fg(+)57 b Fh(h)p Fe(S)5 b(unny)32 b(W)12 b(ar)r(m)29
b(N)9 b(or)r(mal)31 b(Lig)s(ht)d(W)12 b(ar)r(m)29 b(S)5
b(ame)p Fh(i)p 0 912 2100 3 v 303 1030 a Fe(S)29 b Fg(:)81
b Fh(h)p Fe(S)5 b(unny)32 b(W)12 b(ar)r(m)29 b(N)9 b(or)r(mal)31
b Fg(?)d(?)h(?)p Fh(i)0 1234 y Fg(Wh)n(y)g(b)r(eliev)n(e)j(w)n(e)c(can)
h(classify)j(the)d(unseen)86 1387 y Fh(h)p Fe(S)5 b(unny)32
b(W)12 b(ar)r(m)30 b(N)9 b(or)r(mal)30 b(S)5 b(tr)r(ong)32
b(W)12 b(ar)r(m)29 b(S)5 b(ame)p Fh(i)930 2748 y Fg(18)p
eop
%%Page: 19 19
19 18 bop 25 170 a Fi(An)39 b(UNBiased)j(Learner)p 0
321 1947 2 v 104 538 a Fg(Idea:)c(Cho)r(ose)30 b Fe(H)35
b Fg(that)29 b(expresses)h(ev)n(ery)f(teac)n(hable)104
642 y(concept)g(\(i.e.,)i Fe(H)k Fg(is)29 b(p)r(o)n(w)n(er)g(set)g(of)g
Fe(X)7 b Fg(\))104 787 y(Consider)29 b Fe(H)542 756 y
Fa(0)584 787 y Fg(=)g(disjunctions,)i(conjunctions,)104
891 y(negations)f(o)n(v)n(er)e(previous)i Fe(H)0 1049
y Fg(What)g(are)e Fe(S)5 b Fg(,)29 b Fe(G)f Fg(in)h(this)h(case?)104
1194 y(S)e Fh( )104 1339 y Fg(G)g Fh( )930 2748 y Fg(19)p
eop
%%Page: 20 20
20 19 bop 25 170 a Fi(Inductiv)m(e)40 b(Bias)p 0 321
1947 2 v 104 538 a Fd(De\014nition)p Fg(:)g(The)29 b
Fd(inductiv)m(e)36 b(bias)29 b Fg(of)g(a)104 642 y(learning)h(system)f
(is)g(the)g(set)h(of)f(assumptions)104 746 y(that,)g(com)n(bined)f
(with)i(the)g(observ)n(ed)e(training)104 850 y(examples,)h(deductiv)n
(ely)j(en)n(tail)e(subsequen)n(t)104 953 y(instance)g(classi\014cati)q
(ons)j(^)-45 b Fe(c)p Fg(\()p Fe(x)p Fg(\))30 b(made)e(b)n(y)g(the)104
1057 y(learner.)380 1265 y(\()p Fh(8)p Fe(x)c Fh(2)g
Fe(X)7 b Fg(\)\()p Fe(D)23 b Fg(+)c Fe(B)t(ias)h Fg(+)f
Fe(x)24 b Fh(`)i Fg(^)-45 b Fe(c)p Fg(\()p Fe(x)p Fg(\)\))0
1418 y(Here)40 1564 y Fh(\017)21 b Fg(T)-7 b(raining)30
b(data)f Fe(D)d Fg(=)e Fh(fh)p Fe(x;)15 b(c)p Fg(\()p
Fe(x)p Fg(\))p Fh(ig)p Fg(,)31 b(where)e Fe(x)g Fg(is)g(the)104
1667 y(instance,)h Fe(c)p Fg(\()p Fe(x)p Fg(\))g(is)g(its)g
(classi\014cation)40 1813 y Fh(\017)21 b Fe(X)36 b Fg(is)29
b(the)g(set)h(of)f(all)h(p)r(ossible)h(instances)40 1958
y Fh(\017)23 b Fg(^)-45 b Fe(c)p Fg(\()p Fe(x)p Fg(\))30
b(is)f(prediction)i(made)d(b)n(y)g(learner)i(regarding)f
Fe(x)930 2748 y Fg(20)p eop
%%Page: 21 21
21 20 bop 25 155 a Fi(Inductiv)m(e)83 b(Systems)f(and)g(Equiv)-7
b(alen)m(t)25 279 y(Deductiv)m(e)41 b(Systems)p 0 434
1947 2 v 148 591 a
 26523234 26788466 8156938 20458127 27825684 40324218 startTexFig
 148 591 a
%%BeginDocument: ./bookps/figure-vs-bias-new.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 53 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Roman reencodeISO def
/Courier reencodeISO def
/Times-Italic reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I p u
%I t
[ 1 0 0 1 10 70 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-100-*
Courier 10 SetF
%I t
[ 1 0 0 1 299 658 ] concat
%I
[
(Candidate)
(Elimination)
(Algorithm)
()
(using hypothesis)
( space H)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 0.888889 148 249.222 ] concat
%I
131 381 260 470 Rect
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 158 207 ] concat
%I
260 490 370 490 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 207 ] concat
%I
51 500 131 500 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 207 ] concat
%I
51 461 131 461 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 159 721 ] concat
%I
[
(training examples)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 159 681 ] concat
%I
[
(new instance)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1.33333 158 -49.667 ] concat
%I
131 381 260 470 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 158 47 ] concat
%I
260 490 370 490 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 47 ] concat
%I
51 500 131 500 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 47 ] concat
%I
51 461 131 461 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 279 602 ] concat
%I
[
(Equivalent deductive system)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 7 ] concat
%I
51 461 131 461 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 157.001 495.999 ] concat
%I
[
(Assertion "H contains)
( the target concept")
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 309 532 ] concat
%I
[
(Theorem Prover)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 159 562 ] concat
%I
[
(training examples)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 159 522 ] concat
%I
[
(new instance)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 179 418 ] concat
%I
[
(Inductive bias)
( made explicit)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.657143 0 0 1 129.946 177 ] concat
%I
119 251 149 281 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 431.001 738.972 ] concat
%I
[
(classification of )
(new instance, or)
("don't know")
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 427.006 579.034 ] concat
%I
[
(classification of )
(new instance, or)
("don't know")
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 310.994 764.016 ] concat
%I
[
(Inductive system)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 930 2748 a Fg(21)p eop
%%Page: 22 22
22 21 bop 25 170 a Fi(Three)32 b(Learners)h(with)g(Di\013eren)m(t)h
(Biases)p 0 321 1947 2 v 16 538 a Fg(1.)21 b Fc(R)l(ote)29
b(le)l(arner:)39 b Fg(Store)29 b(examples,)g(Classify)i
Fe(x)e Fg(i\013)h(it)104 642 y(matc)n(hes)e(previously)j(observ)n(ed)d
(example.)16 787 y(2.)21 b Fc(V)-7 b(ersion)32 b(sp)l(ac)l(e)d(c)l
(andidate)h(elimination)j(algorithm)16 933 y Fg(3.)21
b Fc(Find-S)930 2748 y Fg(22)p eop
%%Page: 23 23
23 22 bop 25 160 a Fi(Summary)39 b(P)m(oin)m(ts)p 0 321
1947 2 v 16 538 a Fg(1.)21 b(Concept)29 b(learning)i(as)d(searc)n(h)h
(through)f Fe(H)16 683 y Fg(2.)21 b(General-to-sp)r(eci\014c)31
b(ordering)e(o)n(v)n(er)f Fe(H)16 829 y Fg(3.)21 b(V)-7
b(ersion)29 b(space)g(candidate)h(elimination)h(algorithm)16
974 y(4.)21 b Fe(S)33 b Fg(and)c Fe(G)f Fg(b)r(oundaries)h(c)n
(haracterize)i(learner's)104 1078 y(uncertain)n(t)n(y)16
1223 y(5.)21 b(Learner)28 b(can)h(generate)h(useful)f(queries)16
1368 y(6.)21 b(Inductiv)n(e)30 b(leaps)g(p)r(ossible)h(only)e(if)h
(learner)g(is)f(biased)16 1514 y(7.)21 b(Inductiv)n(e)30
b(learners)f(can)g(b)r(e)g(mo)r(delled)h(b)n(y)f(equiv)-5
b(alen)n(t)104 1617 y(deductiv)n(e)30 b(systems)930 2748
y(23)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
